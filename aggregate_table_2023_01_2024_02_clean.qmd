---
title: "aggregate_table_2023_01_2024_02_clean"
author: "Jing Wu"
format: html
editor: visual
---

## Aggregate table Neat versions with functional coding

To organize the all the R codes of the previous program on integrating all the aggregate tables of nine Connect sites from Jan-Nov. 2023 till Jan. 2024: (Jan-Feb, April-May, August, November, 2023 and Jan-Feb. 2024 by each site and plot their time-trend recruitment progress during this period

## Running Code

Based on the previous code

```{r}
#| echo: false
#| include: false
#| eval: true
# [hide] 
library(data.table) ###to write or read and data management 
library(boxr) ###read or write data from/to box
library(tidyverse) ###for data management https://tidyselect.r-lib.org/reference/faq-external-vector.html
library(dplyr) ###data management some functions are not available in the dplyr masked in the tidyverse
library(reshape)  ###to work on transition from long to wide or wide to long data
library(listr) ###to work on a list of vector, files or..
#library(sqldf) ##sql
#library(lubridate) ###date time it is already masked in 'tidyverse'
library(ggplot2) ###plots
library(ggpubr) ###for the publications of plots
library(RColorBrewer) ###visions color http://www.sthda.com/english/wiki/colors-in-r
library(gridExtra)
#library(stringr) ###to work on patterns, charaters
library(plyr)
library(tidyr)
library(tinytex) #for pdf
#library(rmarkdown) ###for the output tables into other files: pdf, rtf, etc.
library(janitor) #to get the summary sum
library(finalfit) #https://cran.r-project.org/web/packages/finalfit/vignettes/export.html t
library(expss) ###to add labels
library(epiDisplay) ##recommended applied here crosstable, tab1
#library(summarytools) ##recommended not applied in this R code
library(gmodels) ##recommended but not applied in this R code
library(magrittr)
library(arsenal)
library(gtsummary)
library(kableExtra)
#library(patchwork)
library(rio)
library(readxl)

#for the color-blind friendly panels
library(rcartocolor)
library(viridis)

usethis::edit_r_environ()
box_auth(client_id = BOX_CLIENT_ID,
         client_secret = BOX_CLIENT_SECRET)
```

The aggregate tables from each site folder in the Connect_DCEG_site ##for the first quarter in 2023 of nine Connect sites:

non-KP sites:

UoC: id=https://nih.app.box.com/file/1152341930993?s=68bixzs9viseotratvsscvhvjv4w84yy; "Aggregate_Report_2023_Feb_27_2023_FILTERED.xlsx",

SF: file id=https://nih.app.box.com/file/1131073521773, Site Aggregate Recruitment Metrics_Feb_2023.xlsx

HP: file id= https://nih.app.box.com/file/1129928729857 HP_aggRpt_2023.02.02.xlsx

HFH: folder id: https://nih.app.box.com/folder/197283499962 file id https://nih.app.box.com/file/1155314861906 Henry Ford Health Aggregate Recrutiment Metrics Report_2.24.2023_final.xlsx

MF: file id: https://nih.app.box.com/file/1136138804005?s=ja36k4f3s38eoo0xdfgux90vt21zlr7e, marshfield_aggregate_recruitment_metrics_2023_2.xlsx

KP sites: KPGA: file id: https://nih.app.box.com/file/1130840520630 KPGA_Aggregate Recruitment Metrics_20230202.xlsx KPHI: file id: https://nih.app.box.com/file/1131242741855 KPHI_Aggregate Recruitment Metrics_20230203.xlsx KPNW: file id: https://nih.app.box.com/file/1130922715232 KPNW_Aggregate Recruitment Metrics_20230203.xlsx KPCO: file id: https://nih.app.box.com/file/1107902251738 KPCO_Aggregate Recruitment Metrics_20230106.xlsx

#input to data list of each non kp aggregate table by month (quarterly) into R data list

```{r}
#| echo: false
#| include: false
#| eval: true
# [hide] 
#non KP sites: 
nonKP_dt<- function(dir,file_id){
  dt.list <- list()
  for (f in 1:5){
  box_setwd(dir_id = dir[f])
  dt <- eval(parse(text=paste("box_read(file_id=", file_id[f],",sheet=1)",sep="")))
  
  empty_columns <- colSums(is.na(dt) | dt == "") == nrow(dt)
  dt<- dt[,!empty_columns]
  col.n <- ncol(dt)
  names(dt)[1] <- "factor"
  
  row.1st <- as.numeric(rownames(dt)[grepl("Total",dt$factor)])
  rows.del = row.1st-1
  tmp <- dt[-c(1:(row.1st-1)),]
  
  names(tmp) <- dt[2,]
  #tmp <- tmp %>% mutate(across(contains(Age),~ gsub("n/a|-","",.x)))
  tmp$site <- site[f]
  
  names(tmp)[5] <- paste0(names(tmp[5]),"recruit")
  #  cnames <- names(tmp)[c(2:5,8)]
  # # #  to check variables in tmp
  # for (j in 1: length(cnames)){
  # varname <- cnames[j]
  # var<-pull(tmp,varname)
  # tmp[,cnames[j]] <- ifelse(numbers_only(var), as.numeric(as.character(var)), var)
  # }

 
  names(tmp)[1] <- "factor"
  
  row_vec <- c(min(as.numeric(row.names(tmp)[grepl("Total",tmp$factor)]))-rows.del, min(as.numeric(row.names(tmp)[grepl("Sex",tmp$factor)]))-rows.del,min(as.numeric(row.names(tmp)[grepl("Race",tmp$factor)]))-rows.del,min(as.numeric(row.names(tmp)[grepl("Insurance", tmp$factor)]))-rows.del,min(as.numeric(row.names(tmp)[grepl("Urbanicity",tmp$factor)]))-rows.del, min(as.numeric(row.names(tmp)[grepl("Socioeconomic",tmp$factor)]))-rows.del,1+nrow(tmp))

  times <- diff(row_vec)
  groups <- c("Overall","Sex","Race","Insurance","Urbanicity","SES")

  newcol <- NULL
  for (m in 1:length(groups)){
  
  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)
  
   }
    tmp <- cbind(tmp,newcol)

  dt.list[[f]] <- tmp
  }
  return(dt.list )
}


```

```{r}
#import the Jan-Feb.2023 data of each site of non KP sites:
dir <- c(221284526200,172266418621,172259169880,197283499962,182126420786) 
# Kp sites: 172266254866,172267916215,172267744905,172267385751,

#non kp sites JanFeb, 2023
file_id <- c("1152341930993","1131073521773","1136138804005","1155314861906","1129928729857") 
site <- c("UCh","SF","MF","HFH","HP")

#to save each dt.list by month
dt.list.Jan <- nonKP_dt(dir,file_id)


```

#for nonkp April 2023 Aggregate tables input list from box:

```{r}
#nonKP aggregate tables April 2023
dir <- c(221284526200,172266418621,172259169880,206300244548,182126420786)
file_id <- c("1206160632248","1185055238854","1185156202278","1206785719769","1206914523362") 
site <- c("UCh","SF","MF","HFH","HP")
dt.list.Apr <- nonKP_dt(dir,file_id)
```

#for nonkp Aug 2023 Aggregate tables input list from box:

```{r}
#August, 2023
site <- c("UCh","SF","MF","HFH","HP")
file_id <- c("1277901914340","1277836775242","1277131252774","1278020707143","1273754776017")
dir <- c(221284526200,172266418621,172259169880,221301688533,182126420786)

dt.list.Aug <- nonKP_dt(dir, file_id)

#for Nov data 2023
#nonKP sites
dir <- c(221284526200,172266418621,172259169880,234046146152,182126420786) # Kp sites: 172266254866,172267916215,172267744905,172267385751,
file_id <- c("1352788763929","1350620486383","1365468886947","1354757625022","1355846204475") 
dt.list.Nov <- nonKP_dt(dir,file_id)

#for Jan-Feb 2024 Aggregate tables:
dir <- c(221284526200,172266418621,172259169880,246886979496,182126420786) # Kp sites: 172266254866,172267916215,172267744905,172267385751,

#non kp sites Feb, 2024
file_id <- c("1433640971443","1432398128660","1437702709795","1431357282964","1433777356168") 
site <- c("UCh","SF","MF","HFH","HP")
dt.list.Feb24 <- nonKP_dt(dir,file_id)
```

#for aggregate table of each non kp site

```{r}
#UChicago
vars <- c("Total","Active","Passive","Activerecruit","All eligible")

aggre.UCh <- function(dt.list){
  
  dt <- dt.list[[1]]
  names(dt)[8] <- "Activerecruit"
  UCh <- dt[,c(1,2,4,6,8,11,15,16)]
  UCh$factor[which(rowSums(is.na(UCh[,vars])) == 5)]
  names(UCh)
#  [1] "Sex" 
#  [2] "Race, Ethnicity"                                                                     #  [3] "Insurance"                                                                           #  [4] "Preferred Language"                                                                  #  [5] "Urbanicity"                                                                          #  [6] "Persistent Poverty"                                                                  #  [7] "Socioeconomic Status"                                                                #  [8] "Location*"                                                                           #  [9] "*Location of any upcoming appointment, NOT location of study biospecimen appt; Orland Park not currently accepting appts"         
# [10] "**Catchment data represent all recruitment sites pulled from April 2023. Individual site catchment data are currently unavailable"
row.names(UCh[which(rowSums(is.na(UCh[,vars])) == 5),])
# [1] "5"  "9"  "31" "38" "42" "54" "58" "65" "74" "75"
tmp <- UCh[which(as.numeric(row.names(UCh)) %nin% c(5,9,31,38:42,54:58,65:75)),] %>% 
  mutate(new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                              newcol=="Sex" & factor == "Female" ~ "Female",
                              newcol=="Sex" & factor == "Male" ~ "Male",
                              #newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                              #newcol=="Sex" & Factor=="Total" ~"Sex.Total",
                              newcol=="Race" &  factor %in% c("White, Non-Hispanic", "White, Ethnicity Unknown") ~ "White",
                              newcol=="Race" & factor %in% c("Asian, Non-Hispanic", "Asian, Ethnicity Unknown") ~ "Asian/ Middle Eastern",
                              newcol=="Race" & factor %in% c("Black, Non-Hispanic","Black, Ethnicity Unknown")  ~ "Black/ African-American",
                              #newcol=="Race" & grepl("Hawaiian",race) & grepl("non-Hispanic",race_ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & factor %in% c("Native American, Non-Hispanic","Native American, Ethnicity Unknown") ~ "American Indian/ Alaskan Native",
                              newcol=="Race" & factor %in% c("Category Not Specified Above, Non-Hispanic", "Category Not Specified Above, Ethnicity Unknown","Multiracial, Non-Hispanic", "Multiracial, Ethnicity Unknown") ~ "Multi-racial/ Other",
                              newcol=="Race" & grepl(", Hispanic", factor) ~ "Hispanic/ Latinx",
                              newcol=="Race" & factor %in% c("Race Unknown, Non-Hispanic","Race Unknown, Ethnicity Unknown") ~ "Race.Unknown",
                              #newcol=="Race" & Factor=="Total" ~"Race.Total",
                              newcol=="Insurance" & grepl("Commercial|Private",factor) & !grepl("Medic|TRICARE", factor) ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid", factor) ~ "Medicaid",
                              newcol=="Insurance" & grepl("TRICARE|VA", factor) ~ "Military",
                              newcol=="Insurance" & grepl("Other|Worker", factor) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown", factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & factor == "RUCA Code 1" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("Code 2", factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("Code 3", factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("Code 4", factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("Code 5", factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("Code 6", factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("Code 7", factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("Code 8", factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("Code 9", factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("Code 10",factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown", factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & grepl("scores 1-25", factor) ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("scores 26-50", factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("scores 51-75", factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("scores 76-100", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown",factor) ~"SES.Unknown/ Missing",
                              newcol=="SES" & grepl("Other ADI", factor) ~ "SES.Other ADI"
  ))%>% mutate(across(contains(vars),~as.numeric(.x)))

 #UCh.new <- tmp %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
 #total.rr <- 100* max(UCh.new$Total)/max(UCh.new$Activerecruit)
 
 UCh.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()
 #the overall row is the highest one of each column in Feb, March, the April Insurance Active min than Overall
 
 UCh.missing <- UCh.group %>% select(contains(vars), site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Overall",newcol,ifelse(newcol %in% c("Sex","SES"), 
                            paste0(newcol,".Unknown/ Missing"),paste0(newcol,".Unknown"))))
 
 UCh.new <- bind_rows(tmp,UCh.missing)  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()

  UCh.new <- UCh.new %>%
 mutate(Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
    ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
    AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent,Response.Rate,ActiveRecruit.Pct,AllElligible.pct)
  
  return(UCh.new[,c(1:5,8,10,6,7,11,9,12)])
}

```

#to integrate all the UCh tables into five demgraphic factors: sex, race-ethnicity, insurance, urbanicity, and ADI.

#Factor Age would be extracted from the Connect recruitment table in GCP

```{r}
dt.list <- dt.list.Jan
UCh_Jan <- aggre.UCh(dt.list)
UCh_Jan$Month <- "Feb-23"
UCh_Apr <- aggre.UCh(dt.list.Apr)
UCh_Apr$Month <- "May-23"

UCh_Aug <- aggre.UCh(dt.list.Aug)
UCh_Aug$Month <- "Aug-23"

UCh_Nov <- aggre.UCh(dt.list.Nov)
UCh_Nov$Month <- "Nov-23"

UCh_Feb24 <- aggre.UCh(dt.list.Feb24)
UCh_Feb24$Month <- "Feb-24"

```

#time-trend plots by demographic factors:sex, race-ethnicity, insurance, urbanicity, and RUCA.

```{r}

```

#for SF site:

```{r}
##SP
agg.SF <- function(dt.list){
   dt <- dt.list[[2]] 
   #dt$site <- "SF"
   SF <- dt[,c(1:6,8,12,13)]
   
   SF <- SF %>% mutate(race = ifelse(!is.na(factor) & newcol=="Race", factor, ifelse(is.na(factor) & newcol=="Race",lag(factor),NA)),
                      race_ethn =ifelse(newcol=="Race", rep(c("non-Hispanic","Hispanic"),5), NA))  

 SF <- SF %>% filter(. , rowSums(is.na(SF[,vars])) < 5 & (race != "Race" | is.na(race)) & !grepl("English|county|Language", factor)) %>% 
  mutate(new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                              newcol=="Sex" & factor == "Female" ~ "Female",
                              newcol=="Sex" & factor == "Male" ~ "Male",
                              #newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                              #newcol=="Sex" & Factor=="Total" ~"Sex.Total",
                              newcol=="Race" & grepl("White",race)& grepl("non-Hispanic",race_ethn) ~ "White",
                              newcol=="Race" & grepl("Asian",race) & grepl("non-Hispanic", race_ethn) ~ "Asian/ Middle Eastern",
                              newcol=="Race" & grepl("Black",race) & grepl("non-Hispanic",race_ethn) ~ "Black/ African-American",
                              #newcol=="Race" & grepl("Hawaiian",race) & grepl("non-Hispanic",race_ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & grepl("Native American",race) & grepl("non-Hispanic", race_ethn) ~ "American Indian/ Alaskan Native",
                              #newcol=="Race" & grepl("More|Multi-racial",race) & grepl("Non-Hispanic", race_ethn) ~ "Multi-racial/ Other",
                              newcol=="Race" & race_ethn=="Hispanic" ~ "Hispanic/ Latinx",
                              #newcol=="Race" & grepl("Unknown",Factor) & grepl("Non-Hispanic/Latinx",Factor) ~ "Race.Unknown",
                              #newcol=="Race" & Factor=="Total" ~"Race.Total",
                              newcol=="Insurance" & grepl("Commercial|Private|Self-Pay|Blue Shield",factor) & !grepl("Medic", factor) ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid", factor) ~ "Medicaid",
                              newcol=="Insurance" & grepl("Tricare|VA", factor) ~ "Military",
                              newcol=="Insurance" & grepl("Other|Worker", factor) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown|NA", factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & factor == "RUCA Code 1" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("Code 2", factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("Code 3", factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("Code 4", factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("Code 5", factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("Code 6", factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("Code 7", factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("Code 8", factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("Code 9", factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("Code 10",factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown", factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & grepl("scores 1-25", factor) ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("scores 26-50", factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("scores 51-75", factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("scores 76-100", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown",factor) ~"SES.Unknown/ Missing",
                              #newcol=="SES" & grepl("Total", factor) ~ "SES.Total"
  )) %>% mutate(across(contains(vars),~as.numeric(.x)))


 SF.group <- SF %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble() #confirmed the overall row are the maximum of each column, the data on March, the sum of aach demographic gactor is different.
 
 
  SF.missing <- SF.group %>% select(contains(vars), site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% mutate(Total=Active + Passive) %>%
    mutate(new_group=ifelse(newcol=="Overall",newcol,ifelse(newcol %in% c("Sex","SES"), 
                            paste0(newcol,".Unknown/ Missing"),paste0(newcol,".Unknown"))))

  SF.new <- bind_rows(SF,SF.missing)  %>%  group_by(newcol,new_group) %>% 
   mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% 
   distinct(new_group, .keep_all = TRUE) %>% as_tibble() %>% 
    mutate(Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
    #response.rate.Total = ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100*as.numeric(Total)/max(as.numeric(Activerecruit,na.rm=TRUE)),2)),
    #ResponseRt.Disparity = round(100*(Response.Rate-total.rr)/total.rr,2),
        ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
    AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent,Response.Rate,ActiveRecruit.Pct,AllElligible.pct)

   return(SF.new[,c(2,1,3:5,8,10,6,7,11,9,12)])
}
  
```

to get the summary aggregate tables of SF with the function above

```{r}
SF_Jan <- agg.SF(dt.list.Jan)
SF_Jan$Month <- "Feb-23"
SF_Apr <- agg.SF(dt.list.Apr)
SF_Apr$Month <- "May-23"
SF_Aug <- agg.SF(dt.list.Aug)
SF_Aug$Month <- "Aug-23"
SF_Nov <- agg.SF(dt.list.Nov)
SF_Nov$Month <- "Nov-23"
SF_Feb24 <- agg.SF(dt.list.Feb24)
SF_Feb24$Month <- "Feb-24"

```

#for MFH site a. the function to convert the original input table in r to the summary integrated aggregate tables

```{r}
##MFH
agg.MFH <- function(dt.list){
  dt <- dt.list[[3]]
  MF <- dt[,c(1:6,9,13,14)]
  #MF$site <- "MF"

  
names(MF) <- c("Factor","race.ethn", "Total", "Active","Passive","Activerecruit","All eligible","site","newcol")
vars <- c("Total", "Active","Passive","Activerecruit","All eligible")
tmp1 <- filter(MF, rowSums(is.na(MF[,vars])) < 5 & !grepl("English|No|Yes",Factor)) %>% 
  mutate(new_group= case_when(newcol=="Overall" & Factor=="Reference" ~ "Overall",
                              newcol=="Sex" & Factor == "Female" ~ "Female",
                              newcol=="Sex" & Factor == "Male" ~ "Male",
                              newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", Factor) ~"Sex.Unknown/ Missing",
                              #newcol=="Sex" & Factor=="Total" ~"Sex.Total",
                              newcol=="Race" & grepl("White",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "White",
                              newcol=="Race" & grepl("Asian",Factor) & grepl("Non-Hispanic|Unknown", race.ethn) ~ "Asian/ Middle Eastern",
                              newcol=="Race" & grepl("Black",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Black/ African-American",
                              newcol=="Race" & grepl("Hawaiian",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & grepl("Indian|Native",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "American Indian/ Alaskan Native",
                              newcol=="Race" & grepl("More|Multiracial",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Multi-racial/ Other",
                              newcol=="Race" & race.ethn=="Hispanic" ~ "Hispanic/ Latinx",
                              newcol=="Race" & grepl("Unknown",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Race.Unknown",
                              #newcol=="Race" & Factor=="Total" ~"Race.Total",
                              newcol=="Insurance" & grepl("Private|Commerical",Factor) & race.ethn != "TRICARE" ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",race.ethn) & !grepl("Medicaid", race.ethn) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid", race.ethn) ~ "Medicaid",
                              newcol=="Insurance" & grepl("VA|TRICARE", race.ethn) ~ "Military",
                              newcol=="Insurance" & grepl("Other|Worker", Factor) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", Factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown", Factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & Factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & Factor == "RUCA Code 1" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("Code 2", Factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("Code 3", Factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("Code 4", Factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("Code 5", Factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("Code 6", Factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("Code 7", Factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("Code 8", Factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("Code 9", Factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("Code 10",Factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown", Factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", Factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & grepl("First Quartile", Factor) ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("Second", Factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("Third Quartile", Factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("Fourth Quartile", Factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown",Factor) ~"SES.Unknown/ Missing",
                              #newcol=="SES" & grepl("Total", Factor) ~ "SES.Total"
  )) %>% mutate(across(contains(vars),~as.numeric(.x)))

MF.group <- tmp1 %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE)

MF.new <- tmp1 %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
 
#total.rr <- 100* max(MF.new$Total)/max(MF.new$Activerecruit)
 MF.new <- MF.new %>% 
    mutate(Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
   ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
    AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent,Response.Rate,ActiveRecruit.Pct,AllElligible.pct)
 
 return(MF.new[,c(1:5,8,10,6:7,11,9,12)])
}
```

to integrate MF input data into the summary aggregate tables, the table of Feb 2024 of MFH is quite different from the previous versions in formats columns, therefore, the integration of the summary aggregate table of 2024-Feb is a stand-alone code below without using the function: agg.MFH

```{r}
MF_Jan <- agg.MFH(dt.list.Jan)
MF_Jan$Month <- "Feb-23"
MF_Apr <- agg.MFH(dt.list.Apr)
MF_Apr$Month <- "May-23"
MF_Aug <- agg.MFH(dt.list.Aug)
MF_Aug$Month <- "Aug-23"
MF_Nov <- agg.MFH(dt.list.Nov)
MF_Nov$Month <- "Nov-23"


#MF_Feb24 <- agg.MFH(dt.list.Feb24)
#MF_Feb24$Month <- "Feb-24"

  dt <- dt.list.Feb24[[3]]
  MF <- dt[,c(1:5,7,11,15,16)]
  #MF$site <- "MF"

names(MF) <- c("Factor","race.ethn", "Total", "Active","Passive","ActiveOptoutVeri","All eligible","site","newcol")

tmp1 <- filter(MF, rowSums(is.na(MF[,c("Total", "Active","Passive","ActiveOptoutVeri","All eligible")])) < 5 & !grepl("English|No|Yes",Factor)) %>% 
  mutate(new_group= case_when(newcol=="Overall" & Factor=="Reference" ~ "Overall",
                              newcol=="Sex" & Factor == "Female" ~ "Female",
                              newcol=="Sex" & Factor == "Male" ~ "Male",
                              newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", Factor) ~"Sex.Unknown/ Missing",
                        
                              newcol=="Race" & grepl("White",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "White",
                              newcol=="Race" & grepl("Asian",Factor) & grepl("Non-Hispanic|Unknown", race.ethn) ~ "Asian/ Middle Eastern",
                              newcol=="Race" & grepl("Black",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Black/ African-American",
                              newcol=="Race" & grepl("Hawaiian",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & grepl("Indian|Native",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "American Indian/ Alaskan Native",
                              newcol=="Race" & grepl("More|Multiracial",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Multi-racial/ Other",
                              newcol=="Race" & race.ethn=="Hispanic" ~ "Hispanic/ Latinx",
                              newcol=="Race" & grepl("Unknown",Factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Race.Unknown",
                             
                              newcol=="Insurance" & grepl("Private|Commerical",Factor) & race.ethn != "TRICARE" ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",race.ethn) & !grepl("Medicaid", race.ethn) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid", race.ethn) ~ "Medicaid",
                              newcol=="Insurance" & grepl("VA|TRICARE", race.ethn) ~ "Military",
                              newcol=="Insurance" & grepl("Other|Worker", Factor) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", Factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown", Factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & Factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & Factor == "RUCA Code\r\n1" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("Code\r\n2", Factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("Code\r\n3", Factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("Code\r\n4", Factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("Code\r\n5", Factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("Code\r\n6", Factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("Code\r\n7", Factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("Code\r\n8", Factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("Code\r\n9", Factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("Code\r\n10",Factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown", Factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", Factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & grepl("First\r\nQuartile", Factor) ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("Second", Factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("Third\r\nQuartile", Factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("Fourth\r\nQuartile", Factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown",Factor) ~"SES.Unknown/ Missing"),
              Activerecruit = ifelse(!is.na(ActiveOptoutVeri) & !is.na(Passive), as.numeric(ActiveOptoutVeri) - as.numeric(Passive), NA))

vars <- c("Total", "Active","Passive","Activerecruit","All eligible")

tmp1 <- tmp1 %>% mutate(across(contains(vars),~as.numeric(.x)))

MF.group <- tmp1 %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE)

MF_new<- tmp1 %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
 
total.rr <- 100* max(MF_new$Total)/max(MF_new$Activerecruit)
 MF_new <- MF_new %>% 
    mutate(Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
   ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
    AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent,Response.Rate,ActiveRecruit.Pct,AllElligible.pct)

 MF_Feb24 <- MF_new[,c(1:5,9,11,7:8,12,10,13)]
 MF_Feb24$Month <- "Feb-24"
 
```

for HFH site: from Henry Ford Health Aggregate Recrutiment Metrics Report_2.24.2023_final.xlsx to Nov.2023

```{r}
 #HFH
agg.HFH <-function(dt.list){
HFH <- dt.list[[4]]
names(HFH)[8] <- "All eligible"
HFH <- HFH[,c(1:5,8,12,13)]

race.sq <- HFH$factor[which(HFH$newcol=="Race" & !is.na(HFH$factor))]

ethnic <- HFH$Total[grepl("Hispanic|Unknown",HFH$Total)]

HFH$race <-  ifelse(HFH$newcol=="Race",c(rep(NA, each=5),rep(race.sq,each=length(ethnic))),NA)

HFH$race_ethn <- ifelse(HFH$newcol=="Race" & length(ethnic)==3, rep(c("non-Hispanic","Unknown","Hispanic"),5),ifelse(HFH$newcol=="Race" & length(ethnic)==2, rep(c("non-Hispanic","Hispanic"),5), NA))

#HFH <- HFH %>% mutate(race = ifelse(is.na(race) & newcol=="Race",lag(race),race))


 tmp <- HFH %>% filter(. , rowSums(is.na(HFH[,vars])) < 5 & (race != "Race" | is.na(race)) & !grepl("Needed|county", factor)) %>% 
  mutate(new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                              newcol=="Sex" & factor == "Female" ~ "Female",
                              newcol=="Sex" & factor == "Male" ~ "Male",
                              #newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                              #newcol=="Sex" & Factor=="Total" ~"Sex.Total",
                              newcol=="Race" & grepl("White",race)& grepl("non-Hispanic|Unknown",race_ethn) ~ "White",
                              newcol=="Race" & grepl("Asian",race) & grepl("non-Hispanic|Unknown", race_ethn) ~ "Asian/ Middle Eastern",
                              newcol=="Race" & grepl("Black",race) & grepl("non-Hispanic|Unknown",race_ethn) ~ "Black/ African-American",
                              #newcol=="Race" & grepl("Hawaiian",race) & grepl("non-Hispanic",race_ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & grepl("Native American",race) & grepl("non-Hispanic|Unknown", race_ethn) ~ "American Indian/ Alaskan Native",
                              #newcol=="Race" & grepl("More|Multi-racial",race) & grepl("Non-Hispanic", race_ethn) ~ "Multi-racial/ Other",
                              newcol=="Race" & race_ethn=="Hispanic" ~ "Hispanic/ Latinx",
                              #newcol=="Race" & grepl("Unknown",Factor) & grepl("Non-Hispanic/Latinx",Factor) ~ "Race.Unknown",
                              #newcol=="Race" & Factor=="Total" ~"Race.Total",
                              newcol=="Insurance" & grepl("Commercial|Private",factor) & !grepl("Medic", factor) ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid", factor) ~ "Medicaid",
                              newcol=="Insurance" & grepl("TRICARE|VA", factor) ~ "Military",
                              newcol=="Insurance" & grepl("Other|Worker", factor) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown", factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & factor == "RUCA Code 1" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("Code 2", factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("Code 3", factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("Code 4", factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("Code 5", factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("Code 6", factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("Code 7", factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("Code 8", factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("Code 9", factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("Code 10",factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown", factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & grepl("scores 1-25", factor) ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("scores 26-50", factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("scores 51-75", factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("scores 76-100", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown",factor) ~"SES.Unknown/ Missing",
                              #newcol=="SES" & grepl("Total", factor) ~ "SES.Total"
  ))%>% mutate(across(contains(vars),~as.numeric(.x)))
  #HFH.new  <- HFH.new [!duplicated(HFH.new $new_group) & !is.na(HFH.new $new_group),]
  
  HFH.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()#the columns in the overall row are not the maximum of each column, which needs to update the Overall
  
  HFH.missing <- HFH.group %>% select(contains(vars), site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% mutate(Total=Active+Passive) %>% 
    mutate(new_group=ifelse(newcol=="Overall",newcol,ifelse(newcol %in% c("Sex","SES"), 
                            paste0(newcol,".Unknown/ Missing"),paste0(newcol,".Unknown"))))
 
 HFH.new <- bind_rows(tmp,HFH.missing)  %>%  group_by(newcol,new_group) %>% 
   mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% 
   distinct(new_group, .keep_all = TRUE) %>% as_tibble()

 HFH.new <- HFH.new  %>%  
   mutate(Total = ifelse(newcol =="Overall",max(HFH.group$Total),Total),
           Active = ifelse(newcol =="Overall",max(HFH.group$Active),Active),
           Passive = ifelse(newcol =="Overall",max(HFH.group$Passive),Passive),
           Activerecruit = ifelse(newcol =="Overall",max(HFH.group$Activerecruit),Activerecruit),
           `All eligible` = ifelse(newcol =="Overall",max(HFH.group$`All eligible`),`All eligible`))

col_pct <- function(x) { 
  ifelse(!is.na(x), paste0(format(round(x,0),big.mark=","), " ( ",round(100*x/max(x,na.rm=TRUE),2), "%)"), " ")
}
 
HFH.new <- as_tibble(HFH.new) %>%
  mutate(Total=Active+Passive,
    Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
   ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
  AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent, Response.Rate,ActiveRecruit.Pct,AllElligible.pct)

return(HFH.new[,c(1:5,8,10,6,7,11,9,12)])
}
```

integration of each input HFH data into the summary aggregate tables by month via agg.HFH

```{r}
HFH_Jan <- agg.HFH(dt.list.Jan)
HFH_Jan$Month <- "Feb-23"
HFH_Apr <- agg.HFH(dt.list.Apr)
HFH_Apr$Month <- "May-23"
HFH_Aug <- agg.HFH(dt.list.Aug)
HFH_Aug$Month <- "Aug-23"
HFH_Nov <- agg.HFH(dt.list.Nov)
HFH_Nov$Month <- "Nov-23"

HFH_Feb24 <- agg.HFH(dt.list.Feb24)
HFH_Feb24$Month <- "Feb-24"


```

#for HP site: four aggregate tables by quarter in 2023

```{r}

agg.HP <-function(dt.list){
 dt <- dt.list[[5]] 
  #dt$site <- "HP"
  if( ncol(dt) == 9) {
    names(dt)[2:7]<-c("race.ethn","Total","Active","Passive","Activerecruit", "All eligible")
  } else {
    names(dt)[2:6]<-c("race.ethn","Active","Passive","Activerecruit", "All eligible")
  }
 
  
    numbers_only <- function(x) !grepl("\\D", x)
             
##HP Feb, 2023 doesn't have Total verified column as the one of Aug.
 ###convert the numeric
dt <- dt
cnames <- names(dt)
#  to check variables in dt
for (i in 1: length(cnames)){
   varname <- cnames[i]
   var<-pull(dt,varname)
   var <- ifelse(var ==".", gsub(".","0",var),var)
   
   dt[,cnames[i]] <- ifelse(numbers_only(var), as.numeric(as.character(var)), var)
}


  HP <- dt %>% mutate(factor=ifelse(is.na(factor),lag(factor),factor)) %>%
    mutate(factor=ifelse(is.na(factor),lag(factor),factor))
  dt$factor[which(rowSums(is.na(dt[,c(3:6)])) == 4)]
                                   
  tmp <- HP[which(as.numeric(row.names(HP)) %nin% c(7,11,32,33,37,43:46,48,59:62,64)),] %>%
    mutate(Total = Active + Passive,
           new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                              newcol=="Sex" & factor == "Sex" ~ "Female",
                              newcol=="Sex" & factor == "Male" ~ "Male",
                              #newcol=="Sex" & grepl("Other",Factor) ~"Sex.Other",
                              newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                              #newcol=="Sex" & Factor=="Total" ~"Sex.Total",
                              newcol=="Race" & factor=="White" & grepl("Non-Hispanic|Unknown",race.ethn) ~ "White",
                              newcol=="Race" & grepl("Asian",factor) & grepl("Non-Hispanic|Unknown", race.ethn) ~ "Asian/ Middle Eastern",
                              newcol=="Race" & grepl("Black",factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Black/ African-American",
                              newcol=="Race" & grepl("Hawaiian",factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Native Hawaiian/ Other Pacific Islander",
                              newcol=="Race" & grepl("Native American",factor) & grepl("Non-Hispanic|Unknown", race.ethn) ~ "American Indian/ Alaskan Native",
                              newcol=="Race" & grepl("Other|Multi-racial",factor) & grepl("Non-Hispanic|Unknown", race.ethn) ~ "Multi-racial/ Other",
                              newcol=="Race" & race.ethn=="Hispanic" ~ "Hispanic/ Latinx",
                              newcol=="Race" & grepl("Unknown",factor) & grepl("Non-Hispanic|Unknown",race.ethn) ~ "Race.Unknown",
                              newcol=="Race" & race.ethn=="Ethnicity" ~"Hispanic/ Latinx",
                              newcol=="Insurance" & grepl("Commercial|Private|Employment|Purchase",factor) & !grepl("Medic", factor) ~ "Private/Commercial",
                              newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                              newcol=="Insurance" & grepl("Medicaid|Public", factor) ~ "Medicaid",
                              newcol=="Insurance" & grepl("Tricare|VA", factor) ~ "Military",
                              newcol=="Insurance" & (grepl("Other|Worker", factor) & !grepl("Public",factor)) ~"Other",
                              newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                              newcol=="Insurance" & grepl("Unknown", factor) ~ "Insurance.Unknown",
                              #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                              newcol=="Urbanicity" & factor == "Urbanicity" ~ "RUCA Code 1",
                              newcol=="Urbanicity" & grepl("CODE 2", factor) ~ "RUCA Code 2",                            
                              newcol=="Urbanicity" & grepl("CODE 3", factor) ~ "RUCA Code 3",
                              newcol=="Urbanicity" & grepl("CODE 4", factor) ~ "RUCA Code 4",                            
                              newcol=="Urbanicity" & grepl("CODE 5", factor) ~ "RUCA Code 5",
                              newcol=="Urbanicity" & grepl("CODE 6", factor) ~ "RUCA Code 6",                            
                              newcol=="Urbanicity" & grepl("CODE 7", factor) ~ "RUCA Code 7",
                              newcol=="Urbanicity" & grepl("CODE 8", factor) ~ "RUCA Code 8",                            
                              newcol=="Urbanicity" & grepl("CODE 9", factor) ~ "RUCA Code 9",
                              newcol=="Urbanicity" & grepl("CODE 10",factor)  ~ "RUCA Code 10",
                              newcol=="Urbanicity" & grepl("Unknown|Missing", factor) ~ "Urbanicity.Unknown", 
                              #newcol=="Urbanicity" & grepl("Total", factor) ~ "Urbanicity.Total", 
                              newcol=="SES" & factor=="Socioeconomic Status" ~ "First Quartile (ADI scores 1-25)",
                              newcol=="SES" & grepl("scores 26-50", factor) ~ "Second Quartile (ADI scores 26-50)",
                              newcol=="SES" & grepl("scores 51-75", factor) ~ "Third Quartile (ADI scores 51-75)",
                              newcol=="SES" & grepl("scores 76-100", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                              newcol=="SES" & grepl("Unknown|Missing",factor) ~"SES.Unknown/ Missing",
                              #newcol=="SES" & grepl("Total", factor) ~ "SES.Total"
  ))
  
 HP.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()
 
 HP.new <- tmp %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble() 
 
 total.rr <- 100* max(HP.new$Total)/max(HP.new$Activerecruit)
 HP.new <- as_tibble(HP.new) %>% mutate(Verified_percent = round(100 * as.numeric(Total)/max(as.numeric(Total),na.rm=TRUE), 2),
    Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
    #response.rate.Total = ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100*as.numeric(Total)/max(as.numeric(Activerecruit,na.rm=TRUE)),2)),
    #ResponseRt.Disparity = round(100*(Response.Rate-total.rr)/total.rr,2),
    ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/max(as.numeric(Activerecruit),na.rm=TRUE), 2), " %"),
  AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/max(as.numeric(`All eligible`),na.rm=TRUE), 2), " %")) %>%  select(newcol,site, new_group,contains(vars),Verified_percent, Response.Rate,ActiveRecruit.Pct,AllElligible.pct)
 
 return(HP.new[,c(1:5,8,10,6:7,11,9,12)])
 }
##HP Feb, 2023 doesn't have Total verified column as the one of Aug. 
 
```

integration of each input HFH data into the summary aggregate tables by month via agg.HP

```{r}
HP_Jan <- agg.HP(dt.list.Jan)
HP_Jan$Month <- "Feb-23"
HP_Apr <- agg.HP(dt.list.Apr)
HP_Apr$Month <- "May-23"
HP_Aug <- agg.HP(dt.list.Aug)
HP_Aug$Month <- "Aug-23"
HP_Nov <- agg.HP(dt.list.Nov)
HP_Nov$Month <- "Nov-23"

HP_Feb24 <- agg.HP(dt.list.Feb24)
HP_Feb24$Month <- "Feb-24"


```

#KP site percentage aggregate tables, all the counts are derived by the catchment N based on the catchment table reported on Jun. 2023.

The `function to input and generate the lists of aggregate tables from original ones to the final integrated ones`

```{r}

KP.agg.ls <- function(dir_kp,file_kp,catchment.kp,month){
  
 kp.nls <- list()
 kp.ptls <- list()
 n <- length(dir_kp)
for (f in 1:n){
  dir=dir_kp[f]
  box_setwd(dir_id  = dir)
  dt <- eval(parse(text=paste("box_read(file_id=", file_kp[f],",sheet=1)",sep="")))
  #dt <- read_xlsx(dt.list[[f]])
  emptyRow <- row.names(dt)[rowSums(is.na(dt)| dt == "") == ncol(dt)]
  empty_columns <- colSums(is.na(dt) | dt == "") == nrow(dt)
  dt<- dt[,!empty_columns]
  #names(dt) <- dt[3,]
  
  month <- month
  #empty_rows <-rowSums(is.na(dt)| dt == "") == ncol(dt)

  #col.n <- ncol(dt) 
  last.col <- as.numeric(emptyRow[-1])-1
  dt1 <- dt[c(7:last.col),]
  dt1$site <- as.character(dt[3,1])
  colnames(dt1) <- c("factor","sub_factor","total.veri.P","Active.Veri.Prow","Active.Veri.Pcol","Passive.Veri.Prow","Passive.Veri.Pcol","Active.Recrui.P","Response.Prop","Catchment.P","ratio.activR.Catch","ratio.Veri.Catch","site")
 

  
  row.1st <- as.numeric(rownames(dt1)[grepl("Total",dt1$factor)])
  rows.del = row.1st-1
  rows.del = row.1st-1
  row_vec <- c(min(as.numeric(row.names(dt1)[grepl("Total",dt1$factor)]))-rows.del, min(as.numeric(row.names(dt1)[grepl("Sex",dt1$factor)]))-rows.del,min(as.numeric(row.names(dt1)[grepl("Race",dt1$factor)]))-rows.del,min(as.numeric(row.names(dt1)[grepl("Insurance", dt1$factor)]))-rows.del,min(as.numeric(row.names(dt1)[grepl("Urbanicity",dt1$factor)]))-rows.del, min(as.numeric(row.names(dt1)[grepl("Socioeconomic",dt1$factor)]))-rows.del,1+nrow(dt1))

  times <- diff(row_vec)
  groups <- c("Overall","Sex","Race","Insurance","Urbanicity","SES")

  newcol <- NULL
  for (m in 1:length(groups)){
  
  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)
  
   }
 dt1 <- cbind(dt1,newcol)
 percent <- c("total.veri.P","Active.Veri.Prow","Active.Veri.Pcol","Passive.Veri.Prow","Passive.Veri.Pcol","Active.Recrui.P","Response.Prop","Catchment.P","ratio.activR.Catch","ratio.Veri.Catch")
 
   race.sq <- str_split_i(dt1$factor[which(dt1$newcol=="Race" & dt1$factor !="Race" & !is.na(dt1$factor))],"\\. ",2)
  dt1$race <-  ifelse(dt1$newcol=="Race",c(rep(NA, times=row_vec[3]),rep(race.sq,each=(row_vec[4]-row_vec[3]-1)/length(race.sq))),NA)

 dt2 <- dt1[-(row_vec[-1]),] %>% mutate(across(contains(percent),~ gsub("<1",1,.x)))
 
     numbers_only <- function(x) !grepl("\\D", x)
   digits <- function(x) !grepl("\\d",x)
  cnames <- names(dt2)
  #  to check variables in recr_noinact_wl1
  for (j in 1: length(percent)){
    varname <- percent[j]
    var<-pull(dt2,varname)
    dt2[,percent[j]] <- ifelse(!is.na(var) , as.numeric(as.character(var)),NA)
  }
  
  
 catch.n <- catchment.kp[f]
 veri.n <- ifelse(dt1$ratio.Veri.Catch==0, 0,min(round(catch.n*as.numeric(dt1$ratio.Veri.Catch[which(dt1$factor=="Total")])/100,0), round(catch.n*as.numeric(dt1$Response.Prop[which(dt1$factor=="Total")])*as.numeric(dt1$ratio.activR.Catch[which(dt1$factor=="Total")])/(10000),0)))
 
 Active.Veri.n <- round(veri.n*as.numeric(dt1$Active.Veri.Prow[which(dt1$factor=="Total")])/100,0)
 Passive.Veri.n <- round(veri.n*as.numeric(dt1$Passive.Veri.Prow[which(dt1$factor=="Total")])/100,0)
 Active.n <- round(catch.n* as.numeric(dt1$ratio.activR.Catch[which(dt1$factor=="Total")])/100,0) 
 total.rr <- as.numeric(dt1$Response.Prop[which(dt1$factor=="Total")])
 
 dt2 <- dt2 %>% 
   mutate(Month=month,
          Active.Recruits = ifelse(!is.na(Active.Recrui.P),round(catch.n*Catchment.P*ratio.activR.Catch/10000,0),NA), 
          Catchment.N = ifelse(!is.na(Catchment.P),round(catch.n*Catchment.P/100,0),NA),
          total.veri.n = ifelse(!is.na(total.veri.P) & ratio.activR.Catch >0, round(0.0001*catch.n*Catchment.P*ratio.Veri.Catch,0), ifelse(ratio.activR.Catch == 0,0,NA)),
          active.Veri.n = ifelse(!is.na(Active.Veri.Pcol)& ratio.activR.Catch >0, round(total.veri.n*Active.Veri.Prow/100,0), ifelse(ratio.activR.Catch == 0,0,NA)),
          passive.Veri.n = ifelse(!is.na(Passive.Veri.Pcol) & ratio.activR.Catch >0, round(total.veri.n*Passive.Veri.Prow/100,0), ifelse(ratio.activR.Catch == 0,0,NA)))
 
 kp.nls[[f ]]<- dt2

 
  tmp <- filter(dt2,(grepl("Hispanic|Unknown",sub_factor) | is.na(sub_factor))) %>% mutate(factor = ifelse(newcol=="Race",race, factor))
 tmp1 <- tmp %>% mutate(new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                                            newcol=="Sex" & factor == "Females" ~ "Female",
                                            newcol=="Sex" & factor == "Males" ~ "Male",
                                            newcol=="Sex" & grepl("Other",factor) ~"Sex.Other",
                                            newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                                            #newcol=="Sex" & factor=="Total" ~"Sex.Total",
                                            newcol=="Race" & grepl("White",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "White",
                                            newcol=="Race" & grepl("Asian",race) & grepl("Non-Hispanic|Unknown", sub_factor) ~ "Asian/ Middle Eastern",
                                            newcol=="Race" & grepl("Black",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "Black/ African-American",
                                            newcol=="Race" & grepl("Hawaiian",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "Native Hawaiian/ Other Pacific Islander",
                                            newcol=="Race" & grepl("Indian|Native",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "American Indian/ Alaskan Native",
                                            newcol=="Race" & grepl("More|Multi-racial|Other",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "Multi-racial/ Other",
                                            newcol=="Race" & sub_factor=="Hispanic" ~ "Hispanic/ Latinx",
                                            newcol=="Race" & grepl("Unknown",race) & grepl("Non-Hispanic|Unknown",sub_factor) ~ "Race.Unknown",
                                            #newcol=="Race" & factor=="Total" ~"Race.Total",
                                            newcol=="Insurance" & grepl("Private|Commercial",factor) & !grepl("Medic", factor) ~ "Private/Commercial",
                                            newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                                            newcol=="Insurance" & grepl("Medicaid", factor) ~ "Medicaid",
                                            newcol=="Insurance" & grepl("VA|Tricare", factor) ~ "Military",
                                            newcol=="Insurance" & grepl("Other|Worker", factor) ~"Other",
                                            newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                                            newcol=="Insurance" & grepl("Unknown", factor) ~ "Insurance.Unknown",
                                            #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                                            newcol=="Urbanicity" & factor == "RUCA Code 1" ~ "RUCA Code 1",
                                            newcol=="Urbanicity" & grepl("Code 2", factor) ~ "RUCA Code 2",                            
                                            newcol=="Urbanicity" & grepl("Code 3", factor) ~ "RUCA Code 3",
                                            newcol=="Urbanicity" & grepl("Code 4", factor) ~ "RUCA Code 4",                            
                                            newcol=="Urbanicity" & grepl("Code 5", factor) ~ "RUCA Code 5",
                                            newcol=="Urbanicity" & grepl("Code 6", factor) ~ "RUCA Code 6",                            
                                            newcol=="Urbanicity" & grepl("Code 7", factor) ~ "RUCA Code 7",
                                            newcol=="Urbanicity" & grepl("Code 8", factor) ~ "RUCA Code 8",                            
                                            newcol=="Urbanicity" & grepl("Code 9", factor) ~ "RUCA Code 9",
                                            newcol=="Urbanicity" & grepl("Code 10",factor)  ~ "RUCA Code 10",
                                            newcol=="Urbanicity" & grepl("Unknown", factor) ~ "Urbanicity.Unknown", 
                                            #newcol=="Urbanicity" & grepl("Total", Factor) ~ "Urbanicity.Total", 
                                            newcol=="SES" & grepl("First Quartile", factor) ~ "First Quartile (ADI scores 1-25)",
                                            newcol=="SES" & grepl("Second", factor) ~ "Second Quartile (ADI scores 26-50)",
                                            newcol=="SES" & grepl("Third Quartile", factor) ~ "Third Quartile (ADI scores 51-75)",
                                            newcol=="SES" & grepl("Fourth Quartile", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                                            newcol=="SES" & grepl("Unknown",factor) ~"SES.Unknown/ Missing",
                                            #newcol=="SES" & grepl("Total", Factor) ~ "SES.Total"
))
 
 
 vars <- c("Active.Recruits","Catchment.N","total.veri.n", "active.Veri.n","passive.Veri.n")
 tmp1 <- tmp1 %>%  group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(.x,na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE)
 
 tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(vars),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble() %>% 
    dplyr::rename_with(., ~ paste0(.x,".group"),any_of(vars))

 tmp2 <- left_join(tmp1,tmp.group[,c("newcol","Active.Recruits.group","Catchment.N.group","total.veri.n.group")], by="newcol") 
 tmp2 <- as_tibble(tmp2) %>% 
   mutate(Total = total.veri.n,
          Active = active.Veri.n,
          Passive = passive.Veri.n,
          Verified_percent = round(100*total.veri.n/total.veri.n.group,2),    
          Activerecruit = Active.Recruits,
          ActiveRecruit.Pct = paste0(round(100 * as.numeric(Active.Recruits)/Active.Recruits.group, 1), " %"),
          Response.Rate =ifelse(as.numeric(Active.Recruits) ==0 | is.na(Active.Recruits),0, paste0(round(100 * as.numeric(total.veri.n)/as.numeric(Active.Recruits,na.rm=TRUE),1), " %")),
          'All eligible' = Catchment.N,
          AllElligible.pct = paste0(round(100 * as.numeric(Catchment.N)/Catchment.N.group, 1), " %")) %>% select(newcol,site,Month, new_group,Total, Active,Passive,Verified_percent, Activerecruit,ActiveRecruit.Pct, Response.Rate,'All eligible',AllElligible.pct)
  kp.ptls[[f]] <- tmp2

  }
  return(c(kp.nls,kp.ptls)) 
} 

```

```{r}
#KP site: first quarter aggregate table reports
dir_kp <- c(172266254866,172267916215,172267744905,172267385751)

site <- c("KPGA","KPNW","KPHI","KPCO")
catchment.kp <- c(173080, 298425,125709,279691)

###KP sites:  Feb, 2023
# KP sites: 
# KPGA: file id: https://nih.app.box.com/file/1130840520630 KPGA_Aggregate Recruitment Metrics_20230202.xlsx 
# KPHI: file id: https://nih.app.box.com/file/1131242741855 KPHI_Aggregate Recruitment Metrics_20230203.xlsx 
# KPNW: file id: https://nih.app.box.com/file/1130922715232 KPNW_Aggregate Recruitment Metrics_20230203.xlsx 
# KPCO: file id: https://nih.app.box.com/file/1107902251738 KPCO_Aggregate Recruitment Metrics_20230106.xlsx
file_kp<- c("1130840520630","1130922715232","1131242741855") #,"1107902251738"

#KPCO verified:1029 and active recruit: 27418
  box_setwd(dir_id  = 172267385751)
  dt <- box_read(file_id=1107902251738)
dt.race <- dt[c(8:17),]

names(dt.race)[1:16] <- c("factor",paste0("Active.",dt[6,c(2:4)]),paste0("Passive.",dt[6,c(5:7)]),"Total",paste0("activeRecr.",dt[6,c(9:11)]),"ActiveRecr%",paste0("catchment.",dt[6,c(13:15)]),"AllEligible%")
#dt.race <- apply(dt.race[,c(2:16)],2,gsub("<1","1",.x))
 numbers_only <- function(x) !grepl("\\D", x)
  cnames <- names(dt.race)
  #  to check variables in recr_noinact_wl1
  for (j in 1: length(cnames)){
    varname <- cnames[j]
    var<-pull(dt.race,varname)
    dt.race[,cnames[j]] <- gsub("<1", "1", var)
    #dt.race[,cnames[j]] <- ifelse( numbers_only(var) , as.numeric(as.character(var)),var)
  }
  
  for (j in 1: length(cnames)){
    varname <- cnames[j]
    var<-pull(dt.race,varname)
    
    dt.race[,cnames[j]] <- ifelse( numbers_only(var) , as.numeric(as.character(var)),var)
  }  
# dt.race <- dt.race %>% 
#   mutate(Active= pmap_dbl(across(contains("Active.")), ~ sum(c(...), na.rm = TRUE)),
#          Passive = pmap_dbl(across(contains("Passive.")), ~ sum(c(...), na.rm = TRUE)))

tmp <- dt.race %>% mutate(new_group = case_when(grepl("Total",factor) ~"Total",
                                                grepl("White",factor) ~ "Hispanic/ Latinx",
                                                grepl("Categories",factor) ~"White", 
                                                grepl("Asian",factor) ~ "Asian/ Middle Eastern",
                                                grepl("Black",factor)  ~ "Black/ African-American",
                                                grepl("Hawaiian",factor)  ~ "Native Hawaiian/ Other Pacific Islander",
                                                grepl("Indian|Native",factor)  ~ "American Indian/ Alaskan Native",
                                                grepl("More|Multi-racial|Other",factor)  ~ "Multi-racial/ Other",
                                                grepl("Unknown",factor)  ~ "Race.Unknown"),
                          Active.pct = ifelse(factor=="Total", Active.Hispanic + `Active.Non-Hispanic`+Active.Unknown,
                                          ifelse(grepl("White",factor), max(Active.Hispanic,na.rm=TRUE), `Active.Non-Hispanic`+Active.Unknown)),
                          Passive.pct = ifelse(factor=="Total", Total-(Active.Hispanic + `Active.Non-Hispanic`+Active.Unknown),
                                           ifelse(grepl("White",factor), max(Passive.Hispanic,na.rm=TRUE), `Passive.Non-Hispanic`+Passive.Unknown)),
                          Total.pct = ifelse(factor=="Total", Total, ifelse(grepl("White",factor), max(Active.Hispanic,na.rm=TRUE) + max(Passive.Hispanic,na.rm=TRUE), Active.pct + Passive.pct)),
                          `ActiveRecr%` = ifelse(factor=="Total", `ActiveRecr%`, ifelse(grepl("White",factor), max(activeRecr.Hispanic,na.rm=TRUE), `ActiveRecr%`-activeRecr.Hispanic)),
                          `AllEligible%` = ifelse(factor=="Total", Total, ifelse(grepl("White",factor), max(catchment.Hispanic,na.rm=TRUE) , `AllEligible%` -catchment.Hispanic)),
                          newcol="Race") %>% select(factor,Active.pct,Passive.pct,Total.pct,`ActiveRecr%`,`AllEligible%`,newcol,new_group)


                                                                                                                        
dt1 <- dt[c(23:60),c(1:6)] 
names(dt1) <- c("factor","Active.pct","Passive.pct","Total.pct","ActiveRecr%","AllEligible%")
percent <- c("Active.pct","Passive.pct","Total.pct","ActiveRecr%","AllEligible%")
dt2 <- dt1 %>% mutate(across(contains(percent),~ gsub("<1",1,.x)))
  #tmp[] <- lapply(tmp, gsub, pattern='n/a|-', replacement=NA)

   numbers_only <- function(x) !grepl("\\D", x)
   digits <- function(x) !grepl("\\d",x)
  cnames <- names(dt2)
  #  to check variables in recr_noinact_wl1
  for (j in 1: length(cnames)){
    varname <- cnames[j]
    var<-pull(dt2,varname)
    dt2[,cnames[j]] <- ifelse(numbers_only(var) , as.numeric(as.character(var)),var)
  }

  row.1st <- as.numeric(rownames(dt2)[grepl("Total",dt2$factor)])
  rows.del = row.1st-1
  rows.del = row.1st-1
  row_vec <- c(min(as.numeric(row.names(dt2)[grepl("Total",dt2$factor)]))-rows.del, min(as.numeric(row.names(dt2)[grepl("Sex",dt2$factor)]))-rows.del,min(as.numeric(row.names(dt2)[grepl("Insurance", dt2$factor)]))-rows.del,min(as.numeric(row.names(dt2)[grepl("Language",dt2$factor)]))-rows.del,min(as.numeric(row.names(dt2)[grepl("Urbanicity",dt2$factor)]))-rows.del, min(as.numeric(row.names(dt2)[grepl("Socioeconomic",dt2$factor)]))-rows.del,1+nrow(dt2))

  times <- diff(row_vec)
  groups <- c("Overall","Sex","Insurance","Language","Urbanicity","SES")

  newcol <- NULL
  for (m in 1:length(groups)){
  
  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)
  
   }    


dt2 <- cbind(dt2,newcol) %>% filter(.,newcol!="Language") %>%
                     mutate(new_group= case_when(newcol=="Overall" & factor=="Total" ~ "Overall",
                            newcol=="Sex" & factor == "Sex" ~ "Female",
                            newcol=="Sex" & factor == "Males" ~ "Male",
                            newcol=="Sex" & grepl("Other",factor) ~"Sex.Other",
                            newcol=="Sex" & grepl("Unknown|Missing", factor) ~"Sex.Unknown/ Missing",
                            newcol=="Insurance" & grepl("Private|Commercial",factor) & !grepl("Medic", factor) ~ "Private/Commercial",
                            newcol=="Insurance" & grepl("Medicare",factor) & !grepl("Medicaid", factor) ~ "Medicare",  
                            newcol=="Insurance" & grepl("Medicaid", factor) ~ "Medicaid",
                            newcol=="Insurance" & factor =="Insurance" ~ "Medicaid",
                            newcol=="Insurance" & grepl("VA|Tricare", factor) ~ "Military",
                            newcol=="Insurance" & grepl("Other|Worker", factor) ~"Other",
                            newcol=="Insurance" & grepl("Uninsured", factor) ~ "Uninsured",
                            newcol=="Insurance" & grepl("Unknown", factor) ~ "Insurance.Unknown",
                                            #newcol=="Insurance" & factor=="Total" ~"Insurance.Total",
                            newcol=="Urbanicity" & grepl("Urbanicity",factor)  ~ "RUCA Code 1",
                            newcol=="Urbanicity" & grepl("Code 2", factor) ~ "RUCA Code 2",                            
                            newcol=="Urbanicity" & grepl("Code 3", factor) ~ "RUCA Code 3",
                            newcol=="Urbanicity" & grepl("Code 4", factor) ~ "RUCA Code 4",                            
                            newcol=="Urbanicity" & grepl("Code 5", factor) ~ "RUCA Code 5",
                            newcol=="Urbanicity" & grepl("Code 6", factor) ~ "RUCA Code 6",                            
                            newcol=="Urbanicity" & grepl("Code 7", factor) ~ "RUCA Code 7",
                            newcol=="Urbanicity" & grepl("Code 8", factor) ~ "RUCA Code 8",                            
                            newcol=="Urbanicity" & grepl("Code 9", factor) ~ "RUCA Code 9",
                            newcol=="Urbanicity" & grepl("Code 10",factor)  ~ "RUCA Code 10",
                            newcol=="Urbanicity" & grepl("Unknown", factor) ~ "Urbanicity.Unknown", 
                                            #newcol=="Urbanicity" & grepl("Total", Factor) ~ "Urbanicity.Total", 
                            newcol=="SES" & grepl("Socioeconomic", factor) ~ "First Quartile (ADI scores 1-25)",
                            newcol=="SES" & grepl("Second", factor) ~ "Second Quartile (ADI scores 26-50)",
                            newcol=="SES" & grepl("Third Quartile", factor) ~ "Third Quartile (ADI scores 51-75)",
                            newcol=="SES" & grepl("Fourth Quartile", factor) ~ "Fourth Quartile (ADI scores 76-100)",
                            newcol=="SES" & grepl("Unknown",factor) ~ "SES.Unknown/ Missing")) 

dt2 <- dt2[which(rowSums(is.na(dt2[,percent])) < 5 & !grepl("Needed|county|Language", dt2$factor)),]

                            
                            
#to combine two datasets: race one and dt2
dt2 <- bind_rows(dt2, tmp[c(2:10),])
catch.n <- 279691
total.veri.n <- 1029 #based on the daily report 1/06/2023
Active.Recruits <- 27418#based on the daily report 1/06/2023

kpco <- dt2 %>% group_by(newcol,new_group) %>% mutate(across(contains(vars),~sum(.x,na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) 

kpco <- as_tibble(kpco) %>% 
  mutate(site="KPCO",
    Total = round(total.veri.n*Total.pct/100,0),
    Active = round(Active.pct*total.veri.n/100,0),
    Passive = round(Passive.pct*total.veri.n/100,0),
    Verified_percent = round(0.01*Total.pct,2),    
    Activerecruit = round(0.01*Active.Recruits*`ActiveRecr%`,0),
    ActiveRecruit.Pct = paste0(round(`ActiveRecr%`, 1), " %"),
    Response.Rate =ifelse(`ActiveRecr%` ==0 | is.na(`ActiveRecr%`),0, paste0(round(100*total.veri.n*Total.pct/(Active.Recruits*`ActiveRecr%`),1), " %")),
    `All eligible` = round(0.01*catch.n*`AllEligible%`,0),
    AllElligible.pct = paste0(`AllEligible%`, " %")) %>% select(newcol,site, new_group,Total, Active,Passive,Verified_percent, Activerecruit,ActiveRecruit.Pct, Response.Rate,`All eligible`,AllElligible.pct)#ResponseRt.Disparity,response.rate.Total
     
kpco$Month <- "Feb-23"

#the other three KP sites with the same formats

#names(dt1) <- c("factor","Active","Passive","Total","Activerecruit","All eligible")

dir_kp <- c("172266254866","172267916215","172267744905") #dir_kpco=172267385751
file_kp <- c("1130840520630","1130922715232","1131242741855") #file_kpco="1107902251738"
site <- c("KPGA","KPNW","KPHI") #site="KPCO"
catchment.kp <- c(173080, 298425,125709) #catchment.kpco=279691

kp3.out.Jan <- KP.agg.ls(dir_kp,file_kp,catchment.kp,"Feb-23")

```

data for April\~May 2023 of each site

HP: https://nih.app.box.com/file/1206914523362 #Apr HP_aggRpt_2023.05.05.xlsx folder id:[182126420786](https://nih.app.box.com/folder/182126420786)

SF: folder:https://nih.app.box.com/folder/172266418621?s=lzpr4y2my4tusv1m55zm0cby7u56a8hf file id: Site Aggregate Recruitment Metrics Apr 2023 - Deidentified.xlsx file 1185055238854

MF: folder: 172259169880 All Files/CONNECT_DCEG-SITES/CONNECT_MARSHFIELD DCEG/Connect Reports_Marshfield/MF Generated Reports file id: https://nih.app.box.com/file/1185156202278 marshfield_aggregate_recruitment_metrics_2023_4.xlsx (saved on May 25, 2023)

HFH: https://nih.app.box.com/file/1206785719769 (folder id https://nih.app.box.com/folder/206300244548) "Updated_Henry Ford Health Aggregate Recrutiment Metrics Report_4.20.2023_final.xlsx"

UCh:https://nih.app.box.com/file/1206160632248 UChicago_Aggregate_Report_April2023.xlsx (saved in May 24,2023) dir id folder: https://nih.app.box.com/folder/221284526200?s=ul3zlazg7cs4pdz7gpgup9gyzoe5y95u

KP sites: for April, 2023 for the second quarter, 2023 KPGA: file id: https://nih.app.box.com/file/1183033236174 KPHI: file id: https://nih.app.box.com/file/1185194330641 KPCO: file id: https://nih.app.box.com/file/1212582478134 #for May 12, 2023, KPCO doesn't have their April report, I would like to keep the overall Connect aggregate table quarterly KPNW: file id: https://nih.app.box.com/file/1185151865525

```{r}
#| echo: false


#import the April-May data of each site of non KP sites:
#Apri, 2023 non KP sites
dir <- c(221284526200,172266418621,172259169880,206300244548,182126420786)
file_id <- c("1206160632248","1185055238854","1185156202278","1206785719769","1206914523362") 
site <- c("UCh","SF","MF","HFH","HP")
#MF_may2023 <- 1206924958687"


```

#for aggregate tables Aug. 2023

#Site file links from Mia's email directory_Id file name

\# HFH HFH -  https://nih.app.box.com/file/1278020707143 (see demographic tab only) 221301688533 Henry Ford Health Aggregate Recrutiment Metrics Report_7.31.2023.xlsx

\# Uchicago UChicago - https://nih.app.box.com/file/1277901914340 221284526200?s=ul3zlazg7cs4pdz7gpgup9gyzoe5y95u UChicago_Aggregate_QuarterlyReport_Aug2023.xlsx

\# KPCO KP-CO - https://nih.app.box.com/file/1280598496207 172267385751 KPCO_Aggregate Recruitment Metrics_20230807.xlsx

\# KPNW KP-NW -- https://nih.app.box.com/file/1273235643922 172267916215 KPNW_Aggregate Recruitment Metrics_20230803.xlsx

\# KPHI KP-HI -- https://nih.app.box.com/file/1271701285609 172267744905 KPHI_Aggregate Recruitment Metrics_20230801.xlsx

\# KPGA KP-GA -- https://nih.app.box.com/file/1280598496207 172266254866 KPGA_Aggregate Recruitment Metrics_20230803.xlsx

\# MF MF -- https://nih.app.box.com/file/1277128106345 172259169880 mcri_recruitment_basic_contact_metrics_round2_31JUL23.xlsx #this spreadsheet is totally different

\# HP HP -- https://nih.app.box.com/file/1273754776017 182126420786 HP_aggRpt_2023.08.04.xlsx

\# SF SF -- https://nih.app.box.com/file/1277836775242 172266418621?s=lzpr4y2my4tusv1m55zm0cby7u56a8hf Site Aggregate Recruitment Metrics Aug 2023 - Deidentified.xlsx

\# MF MF: https://nih.app.box.com/file/1277131252774 1277131252774 marshfield_aggregate_recruitment_metrics_clinics_2023_8.xlsx ##updated by Aleah on Oct. 5, 2023

```{r}
#KP sites

###KP sites:  April, 2023
# KP sites: for April, 2023 for the second quarter, 2023
# KPGA: file id: https://nih.app.box.com/file/1183033236174
# KPHI: file id: https://nih.app.box.com/file/1185194330641
# KPCO: file id: https://nih.app.box.com/file/1212582478134 #for May 12, 2023, KPCO doesn't have their April report, I would like to keep the overall Connect aggregate table quarterly
# KPNW: file id: https://nih.app.box.com/file/1185151865525
dir_kp <- c(172266254866,172267916215,172267744905,172267385751)
file_kp <- c("1183033236174","1185151865525","1185194330641","1212582478134")
site <- c("KPGA","KPNW","KPHI","KPCO")
catchment.kp <- c(173080, 298425,125709,279691)

kp.out.Apr <- KP.agg.ls(dir_kp,file_kp,catchment.kp,"May-23")

##for KP sites Aug, 2023
dir_kp <- c(172266254866,172267916215,172267744905,172267385751)

file_kp <- c("1280598496207","1273235643922","1271701285609","1275397701569")
site <- c("KPGA","KPNW","KPHI","KPCO")
catchment.kp <- c(173080, 298425,125709,279691)
kp.out.Aug <- KP.agg.ls(dir_kp,file_kp,catchment.kp,"Aug-23")

```

#Aggregate tables Nov. 2023

[KPGA](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fhsnjtvr75ylpqynd0lj2wiv1yr4fmluj&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=%2B8nT%2BQL4jNNzLZrVsiaoo1PuVtzQa0HCPHbTPRVGqL4%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fhsnjtvr75ylpqynd0lj2wiv1yr4fmluj&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=%2B8nT%2BQL4jNNzLZrVsiaoo1PuVtzQa0HCPHbTPRVGqL4%3D&reserved=0"): https://nih.app.box.com/folder/172266254866

-   KPGA_Aggregate Recruitment Metrics_20231031.xlsx [http://nih.app.box.com/file/1350590915631](https://nih.app.box.com/file/1350590915631)

[KPNW](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267916215&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=T50twuEUQlRYe4wDmUjVIJsbsMoXWyN3scqSxHvp6WY%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267916215&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=T50twuEUQlRYe4wDmUjVIJsbsMoXWyN3scqSxHvp6WY%3D&reserved=0"): https://nih.app.box.com/folder/172267916215

-   KPNW_Aggregate Recruitment Metrics_20231101.xlsx <https://nih.app.box.com/file/1350905245589>

[KPHI](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267744905&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=s1ew1gKrExiQm1cuGov3K1w3xUYKAhSZEH1IHTG7%2FwY%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267744905&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=s1ew1gKrExiQm1cuGov3K1w3xUYKAhSZEH1IHTG7%2FwY%3D&reserved=0"): https://nih.app.box.com/folder/172267744905

-   KPHI_Aggregate Recruitment Metrics_20231102.xlsx <https://nih.app.box.com/file/1351786254162>

[KPCO](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267385751&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=XXPVaEZ8HFcchacI3xY%2B2QCCvEj8%2Ba9qA%2BcnXMySFqw%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172267385751&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=XXPVaEZ8HFcchacI3xY%2B2QCCvEj8%2Ba9qA%2BcnXMySFqw%3D&reserved=0"): https://nih.app.box.com/folder/172267385751

-   KPCO_Aggregate Recruitment Metrics_20231020.xlsx <https://nih.app.box.com/file/1345610070763>

[UChicago](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Ful3zlazg7cs4pdz7gpgup9gyzoe5y95u&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=xCWbJsg7c8o4horalJ%2BbW9EREEbmT8R57dbLxi2L0BU%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Ful3zlazg7cs4pdz7gpgup9gyzoe5y95u&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=xCWbJsg7c8o4horalJ%2BbW9EREEbmT8R57dbLxi2L0BU%3D&reserved=0"): https://nih.app.box.com/folder/221284526200

-   UChicago_Aggregate_QuarterlyReport_Nov2023.xlsx <https://nih.app.box.com/file/1352788763929>

[Sanford](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172266418621%3Fs%3Dlzpr4y2my4tusv1m55zm0cby7u56a8hf&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=Ky5%2BWTWq9neNHMsZDamDpRhZ6XzyWd%2FRGxzOqGq9egc%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F172266418621%3Fs%3Dlzpr4y2my4tusv1m55zm0cby7u56a8hf&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=Ky5%2BWTWq9neNHMsZDamDpRhZ6XzyWd%2FRGxzOqGq9egc%3D&reserved=0"): https://nih.app.box.com/folder/172266418621

-   Site Aggregate Recruitment Metrics November 2023 Deidentified.xlsx <https://nih.app.box.com/file/1350620486383>

[Marshfield](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fof0nmdw5epab1ribbcnnsnn3p8pym8nw&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iZ%2BSfNKDc2S7LGRB7ZNuKuGuvuUm%2BanuKxI9wcbxhf8%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fof0nmdw5epab1ribbcnnsnn3p8pym8nw&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=iZ%2BSfNKDc2S7LGRB7ZNuKuGuvuUm%2BanuKxI9wcbxhf8%3D&reserved=0"): <https://nih.app.box.com/folder/172259169880>

-   marshfield_aggregate_recruitment_metrics_clinics_2023_11_v3.xlsx <https://nih.app.box.com/file/1365468886947>

[Health Partners](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F182126420786&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=%2FfbzfYxw63Yc%2Bs8OocU2P1LELMp1nUI2vcUSWHvh1gQ%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnih.app.box.com%2Ffolder%2F182126420786&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=%2FfbzfYxw63Yc%2Bs8OocU2P1LELMp1nUI2vcUSWHvh1gQ%3D&reserved=0"): <https://nih.app.box.com/folder/234046146152>

-   Henry Ford Health Aggregate Recrutiment Metrics Report_10.31.2023.xlsx <https://nih.app.box.com/file/1354757625022>

[Henry Ford](https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fwkuawitvrfo4uogy65vv945pqpx94skl&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=ea9ehZdaFtpyDdykxqSi7HQ87oMc8mxWvIV6PZRRN4o%3D&reserved=0 "https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fapp.box.com%2Fs%2Fwkuawitvrfo4uogy65vv945pqpx94skl&data=05%7C01%7Cjing.wu2%40nih.gov%7C94407fb6beba432181d908dbf72875f0%7C14b77578977342d58507251ca2dc2b06%7C0%7C0%7C638375525369563659%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=ea9ehZdaFtpyDdykxqSi7HQ87oMc8mxWvIV6PZRRN4o%3D&reserved=0") (Folder 2022 and 2023): <https://nih.app.box.com/folder/182126420786>

-   HP_aggRpt_2023.11.07.xlsx <https://nih.app.box.com/file/1355846204475>

```{r}
#for KPsite Nov. 2023
file_kp <- c("1350590915631","1350905245589","1351786254162","1345610070763")
site <- c("KPGA","KPNW","KPHI","KPCO")
catchment.kp <- c(173080, 298425,125709,279691)
kp.out.Nov <- KP.agg.ls(dir_kp,file_kp,catchment.kp,"Nov-23")


#KPs <- rbindlist(kp.ptls, use.names=TRUE, fill=TRUE, idcol="id") %>% select("Site","newcol","new_group","Total","Active","Passive","Activerecruit","All eligible")


```

KP sites:

all the aggregate tables are reported by percentage

Four KP sites still keep with their original percentage aggregate table format as percentage inputs:

KPCO: KPCO_Aggregate Recruitment Metrics_20240129.xlsx:  https://nih.app.box.com/file/1432324856904

KPGA: KPGA_Aggregate Recruitment Metrics_20240131.xlsx https://nih.app.box.com/file/1431092447462?s=u7qjy5t7npk0rj8a7tjfa8pxplxgjj1w

KPHI: KPHI_Aggregate Recruitment Metrics_20240131.xlsx https://nih.app.box.com/file/1431763009896

KPNW: KPNW_Aggregate Recruitment Metrics_20240201.xlsx  https://nih.app.box.com/file/1432461145740

```{r}
 selections <- c("site","newcol","new_group","Total","Active","Passive","Activerecruit","All eligible")
 
dir_kp <- c(172266254866,172267916215,172267744905,172267385751)
file_kp <- c("1431092447462","1432461145740","1431763009896","1432324856904")
site <- c("KPGA","KPNW","KPHI","KPCO")
catchment.kp <- c(173080, 298425,125709,279691)
kp.out.Feb24 <- KP.agg.ls(dir_kp,file_kp,catchment.kp,"Feb-24")

```

the function to combine and integrate the summary aggregate tables of all sites by month to get the overall Connect Summary Aggregate table

```{r}

agg.All <- function(kp.ptls, HFH_agg, HP_agg, MF_agg,SF_agg,UCh_agg){
  k <- length(kp.ptls)
  KPs <- rbindlist(kp.ptls, use.names=TRUE, fill=TRUE, idcol="id") %>% select("site","newcol","new_group","Total","Active","Passive","Activerecruit","All eligible")

  selections <- c("site","Month","newcol","new_group","Total","Active","Passive","Activerecruit","All eligible")
  non_kps_n <- bind_rows(as_tibble(HFH_agg[,selections]), as_tibble(HP_agg[,selections]),MF_agg[,selections],SF_agg[,selections],UCh_agg[,selections]) 

  names(non_kps_n)[1] <- "Site"
  vars.n2 <- c("Total","Active","Passive","Activerecruit","All eligible")


  Connects <- bind_rows(as_tibble(non_kps_n),as_tibble(KPs))%>% as_tibble()%>% group_by(newcol,new_group) %>% mutate(across(contains(vars.n2),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble() 

  vars.n3 <-  c("Total","Activerecruit","All eligible")
  Connects.group <- as_tibble(Connects) %>% group_by(newcol) %>% mutate(across(contains(vars.n2),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble() %>% 
    dplyr::rename_with(., ~ paste0(.x,".group"),any_of(vars.n3))

  Connects1 <- left_join(Connects,Connects.group[,c("newcol","Total.group","Activerecruit.group","All eligible.group")], by="newcol") 

  Connects1 <- as_tibble(Connects1) %>% 
  mutate(Verified_percent = round(100 * as.numeric(Total)/Total.group, 2),
         Response.Rate =ifelse(as.numeric(Activerecruit) ==0 | is.na(Activerecruit),0, round(100 * as.numeric(Total)/as.numeric(Activerecruit,na.rm=TRUE),2)),
         ActiveRecruit.Pct = paste0(round(100 * as.numeric(Activerecruit)/Activerecruit.group, 1), " %"),
           AllElligible.pct = paste0(round(100 * as.numeric(`All eligible`)/`All eligible.group`, 1), " %")) %>%  select(newcol,Month, new_group,contains(vars.n2),Verified_percent, Response.Rate,ActiveRecruit.Pct,AllElligible.pct) %>% select(newcol,Month, new_group,Total,Active,Passive,Verified_percent,Activerecruit, Response.Rate,ActiveRecruit.Pct,`All eligible`,AllElligible.pct,Total.group,Activerecruit.group,`All eligible.group`)

  return(Connects1)
}

#[,c(1:3,5,9,12,6,8,13,10,14)]
```

```{r}
#Overall aggregate Summary tables
kp4.out.Jan <- list(kpco,kp3.out.Jan[[4]],kp3.out.Jan[[5]],kp3.out.Jan[[6]])
All_Jan <- agg.All(kp4.out.Jan, HFH_Jan, HP_Jan, MF_Jan,SF_Jan,UCh_Jan)


All_Aug <- agg.All(kp.out.Aug[5:8], HFH_Aug, HP_Aug, MF_Aug,SF_Aug,UCh_Aug)

All_Apr <- agg.All(kp.out.Apr[5:8], HFH_Apr, HP_Jan, MF_Apr,SF_Apr,UCh_Apr)

All_Nov <- agg.All(kp.out.Nov[5:8], HFH_Nov, HP_Nov, MF_Nov,SF_Nov,UCh_Nov)

All_Feb24 <- agg.All(kp.out.Feb24[5:8], HFH_Feb24, HP_Feb24, MF_Feb24,SF_Feb24,UCh_Feb24)
```

#to make plots of Jan-Feb, April-May, August, Nov in 2023, and Jan. 2024 by site

#by Age

Since the Age groups on the aggregate tables are generated from the Operational Connect participants table by matching the numbers of participants at the similar time range referred to their site-reported aggregate tables. In this way, the timing of aggregate tables on Age of Site might be different from their site reported time and the total of the numbers by Age groups might also be different from the overall Total reported by Site.

Based on this complicated process of selecting the similar counts by Age groups for Site-reported Aggregate tables by different time point for each month report, it is better to generate the Age aggregate table individually, which I have done below from the participants table with different time points for each site.

```{r}
bq_auth()
   project <- "nih-nci-dceg-connect-prod-6d04"
  billing <- "nih-nci-dceg-connect-prod-6d04" ##project and billing should be consistent
  
 con <- dbConnect(
   bigrquery::bigquery(),
   project = project,
   dataset = "FlatConnect",
   billing = billing
 )
 
recr_age <- tbl(con,"participants_JP")  %>%  
  filter(.,(!is.na(d_827220437) & ((d_512820379 =='486306141' & d_821247024 != '922622075') | d_512820379 =='854703046' ))) %>% 
  dplyr::select(token,Connect_ID,d_827220437,d_471593703,d_512820379,d_914594314,d_821247024,state_d_934298480) %>% 
  as_tibble() %>%
  mutate(age = case_when(state_d_934298480 == '722846087' ~ "66-70",
                         state_d_934298480 == '124276120' ~ "40-45",
                         state_d_934298480 == '450985724' ~ "46-50",
                         state_d_934298480 == '363147933' ~ "51-55",
                         state_d_934298480 == '636706443' ~ "56-60",
                         state_d_934298480 == '771230670' ~ "61-65",
                         state_d_934298480 == '713781738'~ "30-34",
                         state_d_934298480 == '631272782' ~ "35-39"),
         recruit_type = case_when(d_512820379 == '486306141' ~ "Active",
                                  d_512820379 == '854703046' ~ "Passive",
                                  d_512820379 == '180583933' & d_821247024 == '197316935' ~ "Not Active But Verified"),
        
         verified = case_when(d_821247024 == '875007964' ~ "Not yet verified",
                                             d_821247024 == '197316935'  ~ "Verified",
                                             d_821247024 ==  '219863910' ~ "Cannot be verified",
                                             d_821247024 ==  '922622075' ~ "Duplicate",
                                             d_821247024 ==  '160161595' ~ "Outreach timed out"),                          
         recru_time = ymd_hms(ifelse(d_471593703 =="NA",d_914594314, d_471593703)),
         verified_time = ymd_hms(d_914594314),
         recrstart.date = as.Date(min(ymd_hms(d_471593703),na.rm=TRUE)),
         recruit.week = ceiling(as.numeric(difftime(as.Date(ymd_hms(d_471593703)), as.Date(min(ymd_hms(d_471593703),na.rm=TRUE)),units="days"))/7),
         recrstart.Sunday = as.Date(ifelse(wday(as.Date(min(ymd_hms(d_471593703),na.rm=TRUE))) == 1, as.Date(min(ymd_hms(d_471593703),na.rm=TRUE)),
         as.Date(as.Date(min(ymd_hms(d_471593703),na.rm=TRUE))-wday(as.Date(min(ymd_hms(d_471593703),na.rm=TRUE))) +1 ))),
         Site = case_when(d_827220437 == '531629870' ~ "HealthPartners",
                          d_827220437 == '548392715' ~ "Henry Ford Health System", 
                          d_827220437 == '303349821' ~ "Marshfield Clinic Health System",
                          d_827220437 == '657167265' ~ "Sanford Health", 
                          d_827220437 == '809703864' ~ "University of Chicago Medicine",
                          d_827220437 == '125001209' ~ "Kaiser Permanente Colorado",
                          d_827220437 == '327912200' ~ "Kaiser Permanente Georgia",
                          d_827220437 == '452412599' ~ "Kaiser Permanente Northwest",  
                          d_827220437 == '300267574' ~ "Kaiser Permanente Hawaii"),
         
         Site = factor(Site, levels=c("HealthPartners", "Henry Ford Health System","Marshfield Clinic Health System",
                                      "Sanford Health", "University of Chicago Medicine","Kaiser Permanente Colorado",
                                      "Kaiser Permanente Georgia","Kaiser Permanente Hawaii","Kaiser Permanente Northwest")))

recr_age$Week.Sunday <-  ceiling(as.numeric(difftime(as.Date(ymd_hms(recr_age$d_471593703)), as.Date(recr_age$recrstart.Sunday),units="days"))/7)      
recr_age$Week.Sunday.date <-  recr_age$recrstart.Sunday  + dweeks(recr_age$Week.Sunday)   #to set up the end of observation day of a week  
recr_age <-recr_age %>% mutate(Site = case_when(d_827220437 == '531629870' ~ "HealthPartners",
                          d_827220437 == '548392715' ~ "Henry Ford Health System", 
                          d_827220437 == '303349821' ~ "Marshfield Clinic Health System",
                          d_827220437 == '657167265' ~ "Sanford Health", 
                          d_827220437 == '809703864' ~ "University of Chicago Medicine",
                          d_827220437 == '125001209' ~ "Kaiser Permanente Colorado",
                          d_827220437 == '327912200' ~ "Kaiser Permanente Georgia",
                          d_827220437 == '452412599' ~ "Kaiser Permanente Northwest",  
                          d_827220437 == '300267574' ~ "Kaiser Permanente Hawaii"),
         
         Site = factor(Site, levels=c("HealthPartners", "Henry Ford Health System","Marshfield Clinic Health System",
                                      "Sanford Health", "University of Chicago Medicine","Kaiser Permanente Colorado",
                                      "Kaiser Permanente Georgia","Kaiser Permanente Hawaii","Kaiser Permanente Northwest")))

recrstart.Sunday <- unique(as.Date(recr_age$recrstart.Sunday))
recrstart.date <-  as.Date(min(as.POSIXct(recr_age$d_471593703),na.rm=TRUE))

recr_age$verified.week <- ceiling(as.numeric(difftime(as_date(recr_age$verified_time),as_date(recr_age$recrstart.date),units="days"))/7)
recr_age$verified.week.date <- (recr_age$recrstart.date) + dweeks(recr_age$verified.week)
recr_age$Verified.Sunday <-  ceiling(as.numeric(difftime(as_date(as.POSIXct(recr_age$verified_time)), as_date(recr_age$recrstart.Sunday),units="days"))/7)      
recr_age$Verified.Sunday.date <-  recr_age$recrstart.Sunday  + dweeks(recr_age$Verified.Sunday)    

###to create the time censoring variables by week;
recruit.wk.active <- recr_age[which(recr_age$d_512820379==486306141),] %>% 
     group_by(Week.Sunday,Week.Sunday.date,age) %>%
     dplyr::summarize(active_recruits=n())

recruit.wk.active.age <- recruit.wk.active %>% pivot_wider(names_from = age, values_from = active_recruits, values_fill = 0)

colnames(recruit.wk.active.age)[3:8] <- paste("Active.Recruits",names(recruit.wk.active.age)[3:8],sep="_")
recruit.wk.active.age <- recruit.wk.active.age %>% mutate()

verified.wk.active <- recr_age[which(recr_age$d_821247024 == 197316935 & recr_age$d_512820379==486306141),] %>% 
  group_by(Verified.Sunday,Verified.Sunday.date,age) %>%
  dplyr::summarize(active_verifieds=n())

verified.wk.total <- recr_age[which(recr_age$d_821247024 == 197316935),] %>% 
  group_by(Verified.Sunday,Verified.Sunday.date,age) %>%
  dplyr::summarize(total_verifieds=n())

verified.wk.all <- merge(verified.wk.active,verified.wk.total, by.x=c("Verified.Sunday","Verified.Sunday.date","age"), 
                         by.y = c("Verified.Sunday","Verified.Sunday.date","age"), all.y=TRUE)
#verified.wk.all$Verified.Sunday.date[is.na(verified.wk.all$Verified.Sunday.date)]<- recrstart.date + verified.wk.all$verified.week*7
recrui_wk_verified <- merge(recruit.wk.active,verified.wk.all, by.x=c("Week.Sunday","age"),by.y=c("Verified.Sunday","age"),all.x=TRUE,all.y=TRUE)
recrui_wk_verified$Week.Sunday.date <- as_date(ifelse(is.na(recrui_wk_verified$Week.Sunday.date),recrui_wk_verified$Verified.Sunday.date,recrui_wk_verified$Week.Sunday.date), origin = lubridate::origin)

recrui_wk_verified <- recrui_wk_verified %>% 
  mutate(Verified.Sunday.date = as_date(ifelse(is.na(Verified.Sunday.date), Week.Sunday.date,Verified.Sunday.date))) %>% 
  mutate_at(c("active_recruits","active_verifieds","total_verifieds"),~replace_na(., 0)) 

#recrui_wk_verified <- recrui_wk_verified %>% mutate(week.date=as_date(do.call(pmax, c(select(.,ends_with('max')),na.rm=TRUE))))

recrui_wk_verified <- recrui_wk_verified %>% arrange(Week.Sunday,Week.Sunday.date,age)

# passive recruits are the passive verified
recrui_wk_verified$passive_verifieds <- recrui_wk_verified$total_verifieds-recrui_wk_verified$active_verifieds #new passive recruitment
recrui_wk_verified$active_recruits.cum <- cumsum(recrui_wk_verified$active_recruits)
recrui_wk_verified$passive_verifieds.cum <- cumsum(recrui_wk_verified$passive_verifieds)
recrui_wk_verified$active_verifieds.cum <- cumsum(recrui_wk_verified$active_verifieds)

recrui_wk_verified$total_recruits <- recrui_wk_verified$active_recruits + recrui_wk_verified$passive_verifieds ##the total recruits till that week

recrui_wk_verified$total_recruits.cum <- cumsum(recrui_wk_verified$active_recruits + recrui_wk_verified$passive_verifieds) ##the total recruits till that week

recrui_wk_verified$total_verified.cum <- cumsum(recrui_wk_verified$total_verifieds)

##by site
site <- levels(factor(recr_age$Site))
verified.site <- list()
recru.verified.site <- list()
for (i in 1:9){
 s <- site[[i]] 
 
recruit.wk.active.sub <- recr_age[which(recr_age$d_512820379==486306141 & recr_age$Site == s),] %>% 
     group_by(Site,Week.Sunday,Week.Sunday.date,age) %>%
     dplyr::summarize(active_recruits=n())

verified.wk.active.sub <- recr_age %>% filter(d_821247024 == 197316935 & d_512820379==486306141 & Site==s) %>% 
  group_by(Verified.Sunday,Verified.Sunday.date,age) %>%
  dplyr::summarize(active_verifieds=n())

verified.wk.total.sub <- recr_age %>% filter(d_821247024 == 197316935 & Site == s)  %>% 
  group_by(Verified.Sunday,Verified.Sunday.date,age) %>%
  dplyr::summarize(total_verifieds=n())

verified.wk.all.sub <- merge(verified.wk.active.sub,verified.wk.total.sub, by.x=c("Verified.Sunday","Verified.Sunday.date","age"), 
                         by.y = c("Verified.Sunday","Verified.Sunday.date","age"), all.y=TRUE)


  verified.site[[i]] <- verified.wk.all.sub
  
recrui_wk_verified.sub <- merge(recruit.wk.active.sub,verified.wk.all.sub, by.x=c("Week.Sunday","age"),by.y=c("Verified.Sunday","age"),all.x=TRUE,all.y=TRUE)

recrui_wk_verified.sub$Week.Sunday.date <- as_date(ifelse(is.na(recrui_wk_verified.sub$Week.Sunday.date),recrui_wk_verified.sub$Verified.Sunday.date,recrui_wk_verified.sub$Week.Sunday.date), origin = lubridate::origin) 

recrui_wk_verified.sub <- recrui_wk_verified.sub %>% 
  mutate(Verified.Sunday.date = as_date(ifelse(is.na(Verified.Sunday.date), Week.Sunday.date,Verified.Sunday.date))) %>% 
  mutate_at(c("active_recruits","active_verifieds","total_verifieds"),~replace_na(., 0)) 

  recru.verified.site[[i]] <- recrui_wk_verified.sub
}

verified.wk.all.sub
recrui_wk_verified.sub.cum <- recru.verified.site[[4]] %>% group_by(age) %>% mutate_at(c("active_recruits","active_verifieds","total_verifieds"),~cumsum(.))

#the last week of Jan. 2024, the total verified #/ active recruits are still smaller than the ones shown in the aggregate tables of overall sites:

table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-02-01'),]$age)
# Total active recruits
#  40-45  46-50  51-55  56-60  61-65 
# 161261 125597 130510 123016 147067 
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01'),]$verified )
  #      
  #       Cannot be verified Outreach timed out Verified
  # 40-45                  9                  9     4513
  # 46-50                  7                  5     3697
  # 51-55                  3                  2     4166
  # 56-60                  8                  1     4017
  # 61-65                 14                  1     5017

table(recr_age[which( recr_age$verified_time < '2024-02-01'),]$age,recr_age[which(recr_age$verified_time < '2024-02-01'),]$verified )
  # total verified at the end of Jan. 31, 2024     
  #       Cannot be verified Duplicate Outreach timed out Verified
  # 40-45                 12         6                  9     4937
  # 46-50                  7         6                  5     4027
  # 51-55                  6         6                  2     4583
  # 56-60                  9        10                  1     4458
  # 61-65                 15        12                  1     5493
  # 66-70                  0         0                  0        1


#by site:
#MFH
table(recr_age[which(recr_age$verified_time < '2024-01-26' & recr_age$d_827220437 == '303349821'),]$age,recr_age[which(recr_age$verified_time < '2024-01-26' & recr_age$d_827220437 == '303349821'),]$verified)
  #       Cannot be verified Duplicate Verified
  # 40-45                  0         0      361
  # 46-50                  0         0      348
  # 51-55                  0         0      337
  # 56-60                  0         0      371
  # 61-65                  1         0      449
  # 66-70                  0         0        1
 table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-26' & recr_age$d_827220437 == '303349821'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-26' & recr_age$d_827220437 == '303349821'),]$verified )
#        
#         Cannot be verified Verified
#   40-45                  0      326
#   46-50                  0      330
#   51-55                  0      320
#   56-60                  0      352
#   61-65                  1      424

table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-26' & recr_age$d_827220437 == '303349821'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
#  6491  6363  6399  6521  7131 

#HFH
# table(recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '548392715'),]$age,recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '548392715'),]$verified )
#        Cannot be verified Duplicate Verified
#   40-45                  0         0      384
#   46-50                  0         0      373
#   51-55                  0         0      474
#   56-60                  0         0      495
#   61-65                  0         1      475
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '548392715'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '548392715'),]$verified )
  #      
  #       Verified
  # 40-45      372
  # 46-50      365
  # 51-55      471
  # 56-60      476
  # 61-65      458
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-31' & recr_age$d_827220437 == '548392715'),]$age)
# 
# 40-45 46-50 51-55 56-60 61-65 
#  8649  8460 10280 10831 10529 

#HP
 table(recr_age[which(recr_age$verified_time < '2024-01-02' & recr_age$d_827220437 == '531629870'),]$age,recr_age[which(recr_age$verified_time < '2024-01-02' & recr_age$d_827220437 == '531629870'),]$verified )
  #      
  #       Cannot be verified Duplicate Outreach timed out Verified
  # 40-45                  1         0                  3      682
  # 46-50                  1         0                  2      637
  # 51-55                  0         0                  1      789
  # 56-60                  0         0                  0      771
  # 61-65                  0         0                  0      857
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-02' & recr_age$d_827220437 == '531629870'),]$age)
# 
# 40-45 46-50 51-55 56-60 61-65 
# 10184 10163 10638 10193  9366 
 table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-02' & recr_age$d_827220437 == '531629870'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-02' & recr_age$d_827220437 == '531629870'),]$verified )
       
  #       Cannot be verified Outreach timed out Verified
  # 40-45                  1                  3      675
  # 46-50                  1                  2      631
  # 51-55                  0                  1      779
  # 56-60                  0                  0      759
  # 61-65                  0                  0      851
 
 #SF
 table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-30' & recr_age$d_827220437 == '657167265'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-30' & recr_age$d_827220437 == '657167265'),]$verified )
  #      
  #       Verified
  # 40-45      382
  # 46-50      224
  # 51-55      225
  # 56-60      198
  # 61-65      201
 
 table(recr_age[which(recr_age$verified_time < '2024-01-30' & recr_age$d_827220437 == '657167265'),]$age,recr_age[which(recr_age$verified_time < '2024-01-30' & recr_age$d_827220437 == '657167265'),]$verified )
       
  #       Cannot be verified Duplicate Verified
  # 40-45                  3         6      399
  # 46-50                  0         6      232
  # 51-55                  2         5      241
  # 56-60                  0         8      206
  # 61-65                  0         8      212
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-30' & recr_age$d_827220437 == '657167265'),]$age)
# 
# 40-45 46-50 51-55 56-60 61-65 
# 12124  7846  7510  7396  7218  

#UoCh
table(recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '809703864'),]$age,recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '809703864'),]$verified )
       
  #       Cannot be verified Duplicate Verified
  # 40-45                  4         0      691
  # 46-50                  3         0      513
  # 51-55                  2         1      632
  # 56-60                  3         2      698
  # 61-65                  2         2      639
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '809703864'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '809703864'),]$verified )
       
  #       Cannot be verified Verified
  # 40-45                  4      571
  # 46-50                  3      396
  # 51-55                  1      448
  # 56-60                  2      477
  # 61-65                  1      434
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-31' & recr_age$d_827220437 == '809703864'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
# 47537 33027 32675 29250 27631 

#KPCO
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '125001209'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '125001209'),]$verified )
       
  #       Cannot be verified Outreach timed out Verified
  # 40-45                  0                  0      743
  # 46-50                  1                  2      549
  # 51-55                  0                  0      623
  # 56-60                  1                  1      532
  # 61-65                  5                  0      847
table(recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '125001209'),]$age,recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '125001209'),]$verified )
       
  #       Cannot be verified Duplicate Outreach timed out Verified
  # 40-45                  0         0                  0      813
  # 46-50                  1         0                  2      607
  # 51-55                  0         0                  0      681
  # 56-60                  1         0                  1      576
  # 61-65                  5         0                  0      920  
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-31' & recr_age$d_827220437 == '125001209'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
# 24912 19163 19986 18238 28866   

#KPGA
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '327912200'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '327912200'),]$verified )
       
  #       Cannot be verified Outreach timed out Verified
  # 40-45                  1                  0      244
  # 46-50                  1                  0      236
  # 51-55                  1                  1      272
  # 56-60                  1                  0      279
  # 61-65                  2                  0      394
 table(recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '327912200'),]$age,recr_age[which(recr_age$verified_time < '2024-01-31' & recr_age$d_827220437 == '327912200'),]$verified )
       
  #       Cannot be verified Duplicate Outreach timed out Verified
  # 40-45                  1         0                  0      268
  # 46-50                  1         0                  0      253
  # 51-55                  1         0                  1      307
  # 56-60                  1         0                  0      309
  # 61-65                  2         1                  0      423
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-01-31' & recr_age$d_827220437 == '327912200'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
# 10679  9760 11440 11003 15142 

#KPHI
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-02-01' & recr_age$d_827220437 == '300267574'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
# 11584  8802  9326  9295 12733 

table(recr_age[which(recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '300267574'),]$age,recr_age[which(recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '300267574'),]$verified )
       
  #       Cannot be verified Duplicate Verified
  # 40-45                  0         0      272
  # 46-50                  1         0      208
  # 51-55                  0         0      260
  # 56-60                  2         0      259
  # 61-65                  2         0      312
 table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '300267574'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '300267574'),]$verified )
       
  #       Cannot be verified Verified
  # 40-45                  0      250
  # 46-50                  1      181
  # 51-55                  0      234
  # 56-60                  2      234
  # 61-65                  2      284
 
 #KPNW
 table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '452412599'),]$age,recr_age[which(recr_age$d_512820379==486306141 & recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '452412599'),]$verified )
       
  #       Cannot be verified Outreach timed out Verified
  # 40-45                  3                  6      878
  # 46-50                  0                  1      707
  # 51-55                  1                  0      698
  # 56-60                  2                  0      616
  # 61-65                  3                  1     1034
 table(recr_age[which(recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '452412599'),]$age,recr_age[which(recr_age$verified_time < '2024-02-01' & recr_age$d_827220437 == '452412599'),]$verified )
       
  #       Cannot be verified Duplicate Outreach timed out Verified
  # 40-45                  3         0                  6      994
  # 46-50                  0         0                  1      777
  # 51-55                  1         0                  0      765
  # 56-60                  2         0                  0      678
  # 61-65                  3         0                  1     1114
 
table(recr_age[which(recr_age$d_512820379==486306141 & recr_age$recru_time < '2024-02-01' & recr_age$d_827220437 == '452412599'),]$age)

# 40-45 46-50 51-55 56-60 61-65 
# 27376 19939 20194 18280 26747  

```

```{r}
#Age aggregate tables by month by site:
#Allover:
#names(prop) <- c("40-45",	"46-50",	"51-55",	"56-60",	"61-65")
month0 <- c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24")

prop.ratio <- data.frame(prop=c(19.59,15.65,17.61,17.61,29.54,20.11,19.92,17.82,17.87,28.29,
                        20.43,16.17,18.10,17.68,27.61,20.60,16.74,19.08,18.33,25.24,
                        20.90,16.92,19.42,18.71,24.05,21.01,17.14,19.50,18.97,23.38), Ratio = c(4.0,4.0,4.3,4.4,3.6,4.2,4.1,4.3,4.4,3.9,4.2,4.1,4.3,4.3,3.8,3.8,3.9,4.1,4.1,4.0,3.4,3.5,3.9,3.9,3.9,3.1,3.2,3.5,3.6,3.7), Age = rep(c("40-45","46-50","51-55","56-60","61-65"),6), month =c(rep(month0,each=5)))

ggplot(prop.ratio[!grepl("Mar",prop.ratio$month),], mapping=aes(x = month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(Ratio,nsmall=1))),color="black",size = 3, position = position_dodge(width = 1)) + 
    scale_fill_manual(values = c("#3C989E","skyblue","#2973A5", "lightblue", "#FDBE19" ), name="Age") +
    scale_y_continuous( name="% of Total Verified", breaks=c(10,20,30,40,50),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio ", breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title="Total % of Verified Participants and Response Ratio by Age \n All Sites of Connect",x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#By site
month1 <- c("Feb-23","May-23","Aug-23","Nov-23","Feb-24")
Age_dt <- function(Verified,Activerecruits,site){
  
data <- data.frame(verified=Verified,
                   invites =Activerecruits,
                   Age = rep(c("40-45","46-50","51-55","56-60","61-65"),5),                        Month =c(rep(month1,each=5)),
                   Site = site) %>% group_by(Month) %>%
  mutate(T_verified= sum(verified), 
         T_invited = sum(invites),
         prop = 100*verified/sum(verified), 
         Ratio = round(100*verified/invities,digits =2),
         Month = factor(Month,levels=c("Feb-23","May-23","Aug-23","Nov-23","Feb-24")))
}

ggplot(prop.ratio[!grepl("Mar",prop.ratio$month),], mapping=aes(x = month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(Ratio,nsmall=1))),color="black",size = 3, position = position_dodge(width = 1)) + 
    scale_fill_manual(values = c("#3C989E","skyblue","#2973A5", "lightblue", "#FDBE19" ), name="Age") +
    scale_y_continuous( name="% of Total Verified", breaks=c(10,20,30,40,50),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio ", breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title="Total % of Verified Participants and Response Ratio by Age \n All Sites of Connect",x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


#HP:
Verified=c(142, 119, 146, 151, 168, # Jan-23
           270, 218, 261, 262, 307,
           402, 367, 439, 438, 518,
           541, 492, 604, 599, 686,
           682,637,789,771,857) 
Activerecruits = c(2174,1736,1774,1666,1806,
                   3421,2910,2996,2924,2963,
                    5540,4999,5228,5024,5205,
                    7762,7387,7768,7420,7203,
                    10184,10163,10638,10193,9366)

Site <- "HealthPartners"
prob.ratio <- Age_dt(Verified, Activerecruits, "HealthPartners")


# max_y <- 10*round(max(c(0.1*max(prob.ratio$prop),max(prob.ratio$Ratio[!grepl("Missing|Unknown|Other",prob.ratio$Age)]))),0)
# T <- 10*round(0.1*max(data$prop)/max(data$Ratio),0)
# breaks_1 <- seq(10,max_y,10)
# breaks_2 <- seq(1,0.1*max_y,1) 

ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(Ratio,nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines")) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified", breaks=c(10,20,30,40,50),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0,10.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title="Total % of Verified Participants and Response Ratio by Age \nHealthPartners",x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )




#SP:
Verified = c(87,53,56,61,54,
             137,79,76,77,71,
             228,113,132,118,120,
             310,153,178,151,159,
             399,232,241,206,212)

Activerecruits = c(4218, 2862, 2921, 3106, 3029,
                   5019,3348,3378,3604,3454,
                   7469, 4882, 4848, 4999, 4795,
                   9881,6512,6234,6295,6084,
                   12124,7846,7510,7396,7218)

Site <- "Sanford Health"
prob.ratio <- Age_dt(Verified, Activerecruits, Site)

ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*15,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified", breaks=c(10,20,30,40,50),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /15,  name = "% of Response Ratio ", breaks=c(1.0,2.0,3.0,4.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title="Total % of Verified Participants and Response Ratio by Age \nHealthPartners",x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )



#HFH: 
Verified = c(75, 63, 86, 81, 83,
            114,108,135,115,126,
            208, 198, 262, 234, 243,
            307,289,389,385,369,
            384,373,474,495,475)

Activerecruits = c(1069,1066,1258,1373,1320, 
                   1539,1671,1980,2105,2052,
                   3729,3890,4860,5087,5026,
                   6411,6378,7732,8221,8094,
                   8649,8460,10280,10831,10529)


Site <- "Henry Ford Health System"
prob.ratio <- Age_dt(Verified, Activerecruits, Site)

ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*4,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,40), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /4,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )



#MFH:
Verified = c(108, 107, 95, 90, 91,
            136,135,121,121,119,
            225,225,205,218,256,
            308,301,281,321,386,
            361,348,337,371,449)

Activerecruits =c( 2023, 1995, 2009, 2051, 2036,
                   2388,2357,2373,2411,2394, 
                   3949,  3907, 3935,  3963,  4538,  
                   5255,5203,5222,5308,5917,
                   6491,6363,6399,6521,7131)


Site <- "Marshfield ClinicalHealth System"
prob.ratio <- Age_dt(Verified, Activerecruits, Site)
c(max(prob.ratio$Ratio),max(prob.ratio$prop))

ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,40), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


#UC:
Verified=c( 114, 62, 106, 159, 140,
 187,108,164,237,230,
 323, 224, 324, 380, 366,
 526,391,501,566,516,
 691,513,632,698,639)

Activerecruits=c( 2385,  1901,  2275,  2425,  2667,
 4157,3358,3902,4023,4479,
 8982,  6934,  7717 , 7766, 8361,
 25773,17989,18174,16876,16378,
47537,33027,32675,29250,27631)

Site <- "University of Chicago Medicine"
 prob.ratio <- Age_dt(Verified, Activerecruits, Site)
 c(max(prob.ratio$Ratio),max(prob.ratio$prop))
 
ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,40), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) 


#KP sites:
##KPCO:
Verified =c(208,168,187,134,331,
            310,237,276,194,461,
            593,457,501,415,711,
            732,562,639,522,850,
            813,607,681,576,920)

Activerecruits =c(4829,3913,4037,3475,
11062,
8089,6451,6658,5860,15738,
16733,13114,13694,12358,22362,
21409,16696,17403,15914,26308,
24912,19163,19986,18238,28866)

Site <- "Kaiser Permanente Colorado"
prob.ratio <- Age_dt(Verified, Activerecruits, Site)
c(max(prob.ratio$Ratio),max(prob.ratio$prop))

ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,50), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) 

#KPGA
Verified=c(84,75,99,97,172,
116,106,133,124,199,
185,162,203,182,288,
235,223,267,252,374,
268,253,307,309,423)

Activerecruits=c(3732,3367,3771,3661,7471,
4843,4372,4991,4876,8856,
7357,6744,7896,7650,11566,
9528,8715,10296,9917,13961,
10679,9760,11440,11003,15142)

Site <- "Kaiser Permanente Georgia"
 prob.ratio <- Age_dt(Verified, Activerecruits, Site)
 c(max(prob.ratio$Ratio),max(prob.ratio$prop))
 
ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,50), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) 


#KPHI
Verified=c(71,48,62,67,133,
96,69,84,89,160,
183,141,182,185,251,
238,179,229,224,285,
272,208,260,259,312)

Activerecruits=c(2385,1948,2096,2069,5284,
 3332,2736,2900,2897,6304,
6711,5300,5620,5660,9261,
9205,7156,7629,7731,11230,
11584,8802,9326,9295,12733)

Site <- "Kaiser Permanente Hawaii"
 prob.ratio <- Age_dt(Verified, Activerecruits, Site)
 c(max(prob.ratio$Ratio),max(prob.ratio$prop))
 
ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,40), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) 

#KPNW
Verified=c(252,227,192,196,509,
           299,258,225,222,577,
           593,503,476,447,850,
           869,702,690,620,1055,
994,777,765,678,1114)

Activerecruits=c(6172,4611,4716,4454,11811,
7207,5328,5493,5131,13081,
16578,12173,12525,11432,19950,
23683,17335,17603,16052,24455,
27376,19939,20194,18280,26747
)
           
Site <- "Kaiser Permanente Northwest"
 prob.ratio <- Age_dt(Verified, Activerecruits, Site)
 c(max(prob.ratio$Ratio),max(prob.ratio$prop))
 
ggplot(prob.ratio, mapping=aes(x = Month,fill=Age, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",size = 3, position = position_dodge2(width = 1,preserve="total"),label.padding=unit(0.15,"lines"),show.legend=F) + 
    scale_fill_manual(values = c("#3C989E","#309EBD","#2973A5", "#FDBE19","#CC7D15" ), name="Age") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,40), breaks=c(10,20,30,40),labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio ", breaks=c(2.0,4.0,6.0,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = "")))+
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Age \n",Site),x="") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )            





```

for the color blind friendly panels:

https://cran.r-project.org/web/packages/colorBlindness/vignettes/colorBlindness.html

a\. To use a color scale that works somewhat better for people with color-vision deficiency, we recommend `scale_color_OkabeIto` and `scale_fill_OkabeIto`:

b\. https://www.nceas.ucsb.edu/sites/default/files/2022-06/Colorblind%20Safe%20Color%20Schemes.pdf

c\. https://thenode.biologists.com/data-visualization-with-flying-colors/research/

d\. https://rdrr.io/cran/colorBlindness/src/R/palette.R

<https://colorbrewer2.org/#type=diverging&scheme=PuOr&n=10>: this website is very helpful to help you visualize and select the proper colors, especially for any color-blind friendly ones.

```{r}

library(colorblindr)
library(colorBlindness)
library(rcartocolor)


```

#Plot for Sex by month,

After several testing with datasets of nine Sites on their aggregate tables ( verified % vs response rate) by month, I had developed the function (Sex_plot(dt.combo (dt1,dt2,dt3,dt4,dt5), Site) )to plot the Verified% vs response rate of by Sex during this time period (Jan-Feb, 2023 \~ Feb. 2024)

```{r}
#Sex
Sex_time <- function(dt.combo,Site){
  
data <- dt.combo %>% 
  filter(.,newcol=="Sex") %>% select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
 group_by(Month) %>% dplyr::rename(Sex=new_group) %>%
  mutate(T_verified= sum(Total), 
         T_invited = sum(Activerecruit),
         prop = 100*Total/sum(Total), 
         Ratio = round(100*Total/Activerecruit,digits =2),
         Month = factor(Month,levels=c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24")))
}
###color-blind friendly pannal

Sex_plot <- function(dt.combo,Site){
  
data <- dt.combo %>% 
  filter(.,newcol=="Sex") %>% select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
 group_by(Month) %>% dplyr::rename(Sex=new_group) %>%
  mutate(T_verified= sum(Total), 
         T_invited = sum(Activerecruit),
         prop = 100*Total/sum(Total), 
         Ratio = round(100*Total/Activerecruit,digits =2),
         Month = factor(Month,levels=c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24")))

Site <- Site
max_y <- 10*round(max(c(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)]),max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]))),0)
T <- 10*round(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)])/max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]),0)
breaks_1 <- seq(20,max_y,20)
breaks_2 <- seq(1,0.1*max_y,1) 
          
ggplot(data[!grepl("Missing|Unknown|Other",data$Sex),], mapping=aes(x = Month,fill=Sex, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*T,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black", size =3, position = position_dodge(width = 0.9),show.legend=F) + 
    scale_fill_manual(values = c("#F8D991","#BEBADA","lightblue"), name="Sex") +
    scale_y_continuous( name="% of Total Verified", breaks=breaks_1,labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /T,  name = "% of Response Ratio", breaks=breaks_2,labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Sex \n", Site,"\""), x = " ") +
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"),
           #axis.title.y.right = element_text(size=10,face="bold"),
           title = element_text(size=9,face="bold"),
           # Remove panel border
           panel.border = element_blank(),  
           # Remove panel grid lines
           panel.grid.major = element_blank(),
           panel.grid.minor = element_blank(),
           # Remove panel background
           panel.background = element_blank(),
           # Add axis line
           axis.line = element_line(colour = "grey"),
           # Remove the legend
           legend.title = element_text(size=12,face="bold"),
           legend.position ="bottom" )

}
```

#All Sites of Connect

```{r}
 plt.combo.UC <- bind_rows(UCh_Jan,UCh_Apr, UCh_Aug, UCh_Nov, UCh_Feb24) 
 Sex_plot(plt.combo.UC,"University of Chicago Medicine") 
 
 plt.combo.SF <- bind_rows(SF_Jan,SF_Apr, SF_Aug, SF_Nov, SF_Feb24) 
 Sex_plot(plt.combo.SF,"Sanford Health") 
 
 plt.combo.MF <- bind_rows(MF_Jan,MF_Apr, MF_Aug, MF_Nov, MF_Feb24) 
 Sex_plot(plt.combo.MF,"Marshfield Clinic Health System") 
 
 plt.combo.HFH <- bind_rows(HFH_Jan,HFH_Apr, HFH_Aug, HFH_Nov, HFH_Feb24)  
 Sex_plot(plt.combo.HFH,"Henry Ford Health System") 
 
 plt.combo.HP <- bind_rows(HP_Jan,HP_Apr, HP_Aug, HP_Nov, HP_Feb24) 
 Sex_plot(plt.combo.HP,"HealthPartners") 

 plt.combo.kpga <- bind_rows(kp3.out.Jan[[4]],kp.out.Apr[[5]], kp.out.Aug[[5]], kp.out.Nov[[5]], kp.out.Feb24[[5]]) 
 Sex_plot(plt.combo.kpga,"Kaiser Permanente Georgia") 
 
 plt.combo.kpnw <- bind_rows(kp3.out.Jan[[5]],kp.out.Apr[[6]], kp.out.Aug[[6]], kp.out.Nov[[6]], kp.out.Feb24[[6]]) 
 Sex_plot(plt.combo.kpnw,"Kaiser Permanente Northwest") 
 
 plt.combo.kphi <- bind_rows(kp3.out.Jan[[6]],kp.out.Apr[[7]], kp.out.Aug[[7]], kp.out.Nov[[7]], kp.out.Feb24[[7]]) 
 Sex_plot(plt.combo.kphi,"Kaiser Permanente Hawaii") 
 
 plt.combo.kpco <- bind_rows(kpco,kp.out.Apr[[8]], kp.out.Aug[[8]], kp.out.Nov[[8]], kp.out.Feb24[[8]]) 
 Sex_plot(plt.combo.kpco,"Kaiser Permanente Colorado") 
 
  plt.combo.all <- bind_rows(All_Jan, All_Apr,All_Aug, All_Nov, All_Feb24) 
 plt.combo.all$site <- "All"
 Sex_plot(plt.combo.all,"All Sites of Connect")  

 data <- Sex_time(plt.combo.all,"All Sites of Connect")
 
 Site <- Site
max_y <- 10*round(max(c(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)]),max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]))),0)
T <- 10*round(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)])/max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]),0)
breaks_1 <- seq(20,max_y,20)
breaks_2 <- seq(1,0.1*max_y,1) 
          
ggplot(data[!grepl("Missing|Unknown|Other",data$Sex),], mapping=aes(x = Month,fill=Sex, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*20,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black", size =3, position = position_dodge(width = 0.9),show.legend=F) + 
    scale_fill_manual(values = c("#F8D991","#BEBADA","lightblue"), name="Sex") +
    scale_y_continuous( name="% of Total Verified", breaks=breaks_1,labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /20,  name = "% of Response Ratio", breaks=breaks_2,labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Sex \n", Site,"\""), x = " ") +
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"),
           #axis.title.y.right = element_text(size=10,face="bold"),
           title = element_text(size=9,face="bold"),
           # Remove panel border
           panel.border = element_blank(),  
           # Remove panel grid lines
           panel.grid.major = element_blank(),
           panel.grid.minor = element_blank(),
           # Remove panel background
           panel.background = element_blank(),
           # Add axis line
           axis.line = element_line(colour = "grey"),
           # Remove the legend
           legend.title = element_text(size=12,face="bold"),
           legend.position ="bottom" )
```

#below, the testing records for sex plot.

```{r}

# #Site = factor(Site, levels=c("HealthPartners", "Henry Ford Health System","Marshfield Clinic Health System",
#                                       "Sanford Health", "University of Chicago Medicine","Kaiser Permanente Colorado",
#                                       "Kaiser Permanente Georgia","Kaiser Permanente Hawaii","Kaiser Permanente Northwest")))
 plt.combo.UC <- bind_rows(UCh_Jan,UCh_Apr, UCh_Aug, UCh_Nov, UCh_Feb24) 
 sex_plot(plt.dt,"University of Chicago Medicine") 
 data <- Sex_time(plt.combo.UC,"University of Chicago Medicine")
 
 plt.combo.SF <- bind_rows(SF_Jan,SF_Apr, SF_Aug, SF_Nov, SF_Feb24) 
 data <- Sex_time(plt.combo.SF,"Sanford Health") 
 Site <- "Sanford Health"
 max_y <- 10*round(max(c(0.1*max(data$prop[!grepl("Missing|Unknown",data$Sex)]),max(data$Ratio[!grepl("Missing|Unknown",data$Sex)]))),0)
 T <- 10*round(0.1*max(data$prop[!grepl("Missing|Unknown",data$Sex)])/max(data$Ratio[!grepl("Missing|Unknown",data$Sex)]),0)
 breaks_1 <- seq(20,max_y,20)
 breaks_2 <- seq(1,0.1*max_y,1) 
 
ggplot(data[!grepl("Missing|Unknown|Other",data$Sex),], mapping=aes(x = Month,fill=Sex, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*T,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black", size =3, position = position_dodge(width = 0.9)) + 
    scale_fill_manual(values = c("#F8D991","#BEBADA","lightblue"), name="Sex") +
    scale_y_continuous( name="% of Total Verified", breaks=breaks_1,labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /T,  name = "% of Response Ratio", breaks=breaks_2,labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Sex \n", Site,"\""), x = " ") +
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"),
           #axis.title.y.right = element_text(size=10,face="bold"),
           title = element_text(size=9,face="bold"),
           # Remove panel border
           panel.border = element_blank(),  
           # Remove panel grid lines
           panel.grid.major = element_blank(),
           panel.grid.minor = element_blank(),
           # Remove panel background
           panel.background = element_blank(),
           # Add axis line
           axis.line = element_line(colour = "grey"),
           # Remove the legend
           legend.title = element_text(size=12,face="bold"),
           legend.position ="bottom" )


 plt.combo.MF <- bind_rows(MF_Jan,MF_Apr, MF_Aug, MF_Nov, MF_Feb24) 
 data <- Sex_time(plt.combo.MF,"Marshfield Clinic Health System") 
 
 plt.combo.HFH<- bind_rows(HFH_Jan,HFH_Apr, HFH_Aug, HFH_Nov, HFH_Feb24) 
data <- Sex_time(plt.combo,"Henry Ford Health System") 
Site <- "Henry Ford Health System"
max_y <- 10*round(max(c(0.1*max(data$prop[!grepl("Missing|Unknown",data$Sex)]),max(data$Ratio[!grepl("Missing|Unknown",data$Sex)]))),0)
T <- 10*round(0.1*max(data$prop[!grepl("Missing|Unknown",data$Sex)])/max(data$Ratio[!grepl("Missing|Unknown",data$Sex)]),0)
breaks_1 <- seq(20,max_y,20)
breaks_2 <- seq(1,0.1*max_y,1) 

ggplot(data[!grepl("Missing|Unknown",data$Sex),], mapping=aes(x = Month,fill=Sex, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.4), color = "black", size = 3, position = position_dodge(width = 1)) + 
    geom_label(aes(y=Ratio*T,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black", size =3, position = position_dodge(width = 0.9)) + 
    scale_fill_manual(values = c("#F8D991","#BEBADA","lightblue"), name="Sex") +
    scale_y_continuous( name="% of Total Verified", breaks=breaks_1,labels = scales::number_format(accuracy = 0.1), sec.axis = sec_axis( ~ . /T,  name = "% of Response Ratio", breaks=breaks_2,labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by Sex \n", Site,"\""), x = " ") +
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"),
           #axis.title.y.right = element_text(size=10,face="bold"),
           title = element_text(size=9,face="bold"),
           # Remove panel border
           panel.border = element_blank(),  
           # Remove panel grid lines
           panel.grid.major = element_blank(),
           panel.grid.minor = element_blank(),
           # Remove panel background
           panel.background = element_blank(),
           # Add axis line
           axis.line = element_line(colour = "grey"),
           # Remove the legend
           legend.title = element_text(size=12,face="bold"),
           legend.position ="bottom" )

##for the kp site data:

plt.combo.kpga <- bind_rows(kp3.out.Jan[[4]],kp.out.Apr[[5]], kp.out.Aug[[5]], kp.out.Nov[[5]], kp.out.Feb24[[5]]) 
 data <- Sex_time(plt.combo.kpga,"Kaiser Permanente Georgia") 
 

max_y <- 10*round(max(c(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)]),max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]))),0)
T <- 10*round(0.1*max(data$prop[!grepl("Missing|Unknown|Other",data$Sex)])/max(data$Ratio[!grepl("Missing|Unknown|Other",data$Sex)]),0)
breaks_1 <- seq(20,max_y,20)
breaks_2 <- seq(1,0.1*max_y,1) 

```

##for Race

```{r}
# "HealthPartners", "Henry Ford Health System","Marshfield Clinic Health System", "Sanford Health", "University of Chicago Medicine","Kaiser Permanente Colorado", "Kaiser Permanente Georgia","Kaiser Permanente Hawaii","Kaiser Permanente Northwest"
# color-blindly friendly one with gray, and one with black (palettes source: http://jfly.iam.u-tokyo.ac.jp/color/). The palette with grey:
cbp1 <- c("#CC79A7", "#E69F00", "#56B4E9", "#F0E442",
          "#009E73", "#0072B2", "#D55E00", "#999999")

# The palette with black:
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
          "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

race_dt <- function(dt.combo,Race){
data <- dt.combo %>% 
  filter(.,newcol=="Race") %>% select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
 group_by(Month) %>% dplyr::rename(Race=new_group) %>% group_by(Month) %>% 
  mutate(T_verified= sum(Total), 
         T_invited = sum(Activerecruit),
         prop = 100*Total/sum(Total), 
         Ratio = round(100*Total/Activerecruit,digits =2),
         Race = ifelse(grepl("Race.",Race), "Unknown", Race),
         Race = factor(Race,levels=c("White", "Hispanic/ Latinx", "Black/ African-American", "Asian/ Middle Eastern", "American Indian/ Alaskan Native", "Native Hawaiian/ Other Pacific Islander", "Multi-racial/ Other","Unknown")),
         Month=factor(Month,levels=c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24")))
}

#for UCh


ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.9), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*6,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,80), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /6,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0,12.0,13.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nUniversity of Chicago Medicine", x = "",caption="Native Hawaiian or Other Pacific Islander is removed because of no verified participants in this group till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#SF
data <- race_dt(plt.combo.SF,"Race")
Site <- "Sanford Health"
ggplot(data[!grepl("Mar",data$Month),], mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.9), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,100), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(2.0,4.0,6.0,8.0,10.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nSanford Health", x = "",caption="Native Hawaiian or Other Pacific Islander is removed because of no verified participants in this group till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#MF
data <- race_dt(plt.combo.MF,"Race")

ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.7), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,100), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(5.0,10.0,15.0,20.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nMarshfield Clinic Health System", x = "",caption="Native Hawaiian or Other Pacific Islander is removed because of no verified participants in this group till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#HFH

ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.5), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*2,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,80), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /2,  name = "% of Response Ratio", breaks=c(5.0,10.0,20,30.0,40.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nHenry Ford Health System", x = "",caption="Native Hawaiian or Other Pacific Islander is removed because of no verified participants in this group till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#HP
data <- race_dt(plt.combo.HP,"Race")
ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.9), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,110), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(2.0,4.0,6,8.0,10.0,12),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nHealthPartners", x = "",caption="Native Hawaiian or Other Pacific Islander is removed because of no verified participants in this group till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#KPGA
data <- race_dt(plt.combo.kpga)

ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.4), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,70), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(2.0,4.0,6,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nKaiser Permanente Georgia", x = "") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


#KPNW
data <- race_dt(plt.combo.kpnw,"Race")

ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.8), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*20,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,100), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /20,  name = "% of Response Ratio", breaks=c(1.0,2.0,3,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nKaiser Permanente Northwest", x = "") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data <- race_dt(plt.combo.kphi,"Race")
ggplot(data, mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.2), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + 
    scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,50), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(1.0,2.0,3,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nKaiser Permanente Hawaii", x = "") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data <- race_dt(plt.combo.kpco,"Race")
ggplot(data[which(data$Activerecruit !=0),], mapping=aes(x = Month,fill=Race, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste0(format(round(prop,digits=1),nsmall=1)), y=prop*0.2), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 1.0,preserve="total"),size=2.5,label.padding=unit(0.15,"lines")) + scale_fill_manual(values = cbp1,name="Race/Ethnicity") +
    #scale_fill_brewer(palette ="Set3",name="Race/Ethnicity") +
    scale_y_continuous( name="% of Total Verified",limits=c(0,90), labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(2.0,4.0,6,8.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Race \nKaiser Permanente Colorado", x = "") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )
```

#Insurance

```{r}

pal <- c("#000000","#004949","#009292","#ff6db6","#ffb6db",
 "#490092","#006ddb","#b66dff","#6db6ff","#b6dbff",
 "#920000","#924900","#db6d00","#24ff24","#ffff6d")

ins_color <- c("#74B0C7","#FBE5B5","#d8daeb","#CC7D15","#3C989E","#797D83")

Ins_dt <- function(dt.combo,Insurance){
data <- dt.combo %>% 
  filter(.,newcol=="Insurance") %>% select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
 group_by(Month) %>% dplyr::rename(Insurance=new_group) %>% group_by(Month) %>% 
  mutate(T_verified= sum(Total), 
         T_invited = sum(Activerecruit),
         prop = 100*Total/sum(Total), 
         Ratio = ifelse(Activerecruit==0 & Total ==0,0,round(100*Total/Activerecruit,digits =2)),
         Insurance=gsub("Insurance.","",Insurance),
         Insurance = factor(Insurance,levels=c("Private/Commercial","Military","Medicare","Medicaid","Uninsured","Unknown","Other")),
         Month=factor(Month,levels=c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24")))
}

library(rcartocolor)

data <- Ins_dt(plt.combo.UC,"Insurance")
max_y <- 10*round(max(c(0.1*max(data$prop),max(data))),0)
 T <- 10*round(0.1*max(data$prop)/max(data),0)
 breaks_1 <- seq(20,max_y,20)
 breaks_2 <- seq(1,0.1*max_y,1) 


ggplot(data[!grepl("Other",data$Insurance) & !grepl("Mar",data$Month),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.35), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*3.5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,80), breaks=c(10,20,30,40,50,60,70),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /3,  name = "% of Response Ratio", breaks=c(4.0,8.0,12.0,16.0,20.0,24.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nUniversity of Chicago Medicine", x = "",
          caption ="'Other' Group of Insurance is removed") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) #saved the dim (900*630)

ggplot(data[!grepl("Other",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.8), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*3,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5) + 
   #scale_fill_carto_d(name="Insurance",palette="Safe") +
   scale_fill_brewer(palette ="Pastel1",name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,70), breaks=c(10,20,30,40,50,60,70),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /3,  name = "% of Response Ratio", breaks=c(4.0,8.0,12.0,16.0,20.0,24.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend(override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nAll Sites of Connect", x = "",
          caption ="'Other' Group of Insurance is removed") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


#SF
data <- ins_dt(plt.combo.SF,Insurance)
Site <- "Sanford Health"

ggplot(data[!grepl("Military|Uninsured",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*1.02), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*3,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,100), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /3,  name = "% of Response Ratio", breaks=c(5.0,10.0,15.0,20.0,25.0,30.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nSanford Health", x = "",
          caption ="Neither 'Military' Nor 'Other' Insurance Group has any participants and is removed ") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data <- Ins_dt(plt.combo.MF,"Marshfield Clinic Health System")
ggplot(data[!grepl("Other",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*1.02), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*7,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,100), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /7,  name = "% of Response Ratio", breaks=c(5.0,10.0,15.0,20.0,25.0,30.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nMarshfield Clinic Health System", x = "",
          caption ="'Other' Group of Insurance is removed") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#HP
data <- Ins_dt(plt.combo.HP,Insurance)
 Site <-   "HealthPartners"
tapply(data$prop,data$Insurance, min)
tapply(data$prop,data$Insurance, max)

ggplot(data[!grepl("Other|Unknown",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.8), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,120), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0,12.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nHealthPartners", x = "",
          caption ="Neither 'Unknown' nor 'Other' Insurance Group is available and removed") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#HFH
data <- Ins_dt(plt.combo.HFH,,Insurance)
 Site <-  "Henry Ford Health System"
#to manually check the range of the verified % and ratio to derive the ratio of the axis y1/ y2
tapply(data$prop,data$Insurance, min)
tapply(data$Ratio,data$Insurance, min)
tapply(data$prop,data$Insurance, max)
tapply(data$Ratio,data$Insurance, max)

data$Insurance <- droplevels(data$Insurance)
ggplot(data[!grepl("Other",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.5), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nHenry Ford Health System", x = "",
          caption ="The'Other' Insurance Group is removed. Neither 'Military' nor 'Unknown' is available") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

#KPCO
data <- Ins_dt(plt.combo.kpco,,Insurance)
 Site <-  "Kaiser Permanente Colorado"

ggplot(data[!grepl("Other",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.7), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(4.0,8.0,12.0,16.0,20.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nKaiser Permanente Colorado", x = "",
          caption ="Neither 'Military' nor 'Uninsurance' is available till now. The 'Other' Insurance group is removed") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data<- Ins_dt(plt.combo.kpga,"Kaiser Permanente Geogeria")
data$Insurance <- droplevels(data$Insurance)
ggplot(data[!grepl("Medicaid",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.7), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*15,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /15,  name = "% of Response Ratio", breaks=c(4.0,8.0,12.0,16.0,20.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nKaiser Permanente Geogeria", x = "",
          caption ="The verified participants from the 'Medicaid' group isn't available and removed.\nNeither 'Uninsured' nor 'Military' Insurance group is available till now")  +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


##KPHI
data <- Ins_dt(plt.combo.kphi, ,Insurance)
 Site <-  "Kaiser Permanente Hawaii"
ggplot(data[!grepl("Other",data$Insurance),], mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.4), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*20,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /20,  name = "% of Response Ratio", breaks=c(4.0,8.0,12.0,16.0,20.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nKaiser Permanente Hawaii", x = "",
          caption ="Neither of or 'Military' nor 'Uninsured' Insurance group is available till now.\nThe 'Other' group is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


data <- Ins_dt(plt.combo.kpnw,Insurance)
Site <- "Kaiser Permanente Northwest"
ggplot(data, mapping=aes(x = Month,fill=Insurance, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.8), color = "black", size = 3, position = position_dodge2(width = 1.0,preserve = "total")) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,label.padding=unit(0.15,"lines"),show.legend = F) + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Safe") +
    #scale_fill_OkabeIto(name="Insurance") +
    scale_fill_manual(values=ins_color,name="Insurance") +
    scale_y_continuous( name="% of Total Verified",limits =c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /10,  name = "% of Response Ratio", breaks=c(2.0,4.0,6.0,8.0,10.0),labels = scales::number_format(accuracy = 0.1))) + 
    guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title="Total % of Verified Participants and Response Ratio by Insurance \nKaiser Permanente Northwest", x = "",
          caption ="Neither 'Military' nor 'Uninsurance' Insurance group is available till now") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


```

#for RUCA code: urbanicity levels:

```{r}
#I had commented several color-blind friendly color palette options in the code to make a free choice.
pal_ruca <- c("#de77ae","#FCAE91", "#C2E699", "#A1DAB4","#7fbc41")
library(viridis)
# execute this command only the first time you use ggpubfigs
devtools::install_github("JLSteenwyk/ggpubfigs")
# load ggpubfigs
library(ggpubfigs)
library(see)

ruca_dt <- function(dt.combo,Urbanicity){
  data <- dt.combo %>% 
  filter(.,newcol=="Urbanicity") %>% select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
 group_by(Month) %>% dplyr::rename(Urbanicity=new_group) %>%
    mutate(RUCA=ifelse(str_split_i(Urbanicity," ",-1)=='1', "Code 1",
                   ifelse(str_split_i(Urbanicity," ",-1)=='2', "Code 2", 
                     ifelse(str_split_i(Urbanicity," ",-1) %in% c("3","4","5","6"), "Code 3~6", 
                       ifelse(str_split_i(Urbanicity," ",-1) %in% c("7","8","9","10"), "Code 7~10","Unknown")))),
         RUCA=factor(RUCA,levels=c("Code 1","Code 2","Code 3~6", "Code 7~10", "Unknown"))) %>% 
    as_tibble() %>% group_by(Month,RUCA)  %>% 
  mutate(T1_verified= sum(Total, na.rm=T), 
         T1_invited = sum(Activerecruit, na.rm=T)) %>% as_tibble() %>% 
  group_by(Month) %>% 
  mutate(T_verified= sum(Total, na.rm=T), 
         T_invited = sum(Activerecruit, na.rm=T), 
         prop = 100*T1_verified/sum(Total, na.rm=T), 
         Ratio = round(100*T1_verified/T1_invited,digits =2), 
         Month=factor(Month,levels=c("Feb-23","Mar-23","May-23","Aug-23","Nov-23","Feb-24"))) %>% arrange(RUCA,desc(Ratio)) %>%distinct(RUCA, .keep_all = TRUE)
}

#
data <- ruca_dt(plt.combo.UC,Urbanicity)
Site <- "University of Chicago Medicine"
ggplot(data, mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.8), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(5,4,3,2,1))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60,80,100), limits= c(0, 105),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5, name = "% of Response Ratio", 
                                             breaks=c(5.0,10.0,15.0,20.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )

data <- ruca_dt(plt.combo.HFH,Urbanicity)
Site <- "Henry Ford Health System"
ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.8), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*2,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60,80,100), limits= c(0, 105),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /2, name = "% of Response Ratio", 
                                             breaks=c(5.0,10.0,15.0,20.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )


data <- ruca_dt(plt.combo.MF,Urbanicity)
Site <- "Marshfield Clinic Health System"

ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.3), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*8,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60), limits= c(0, 60),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /8, name = "% of Response Ratio", 
                                             breaks=c(3.0,6.0,9.0,12.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )

#HFH
data <- ruca_dt(plt.combo.HFH,Urbanicity)
Site <- "Henry Ford Health System"

ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.3), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*2,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + scale_fill_manual(values =rev(pal_ruca),name="RUCA Code") + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") + 
    #scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    #scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60,80,100), limits= c(0, 105),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /2, name = "% of Response Ratio", 
                                             breaks=c(10.0,20.0,30.0,40.0,50.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )

#SF
data <- ruca_dt(plt.combo.SF,Urbanicity)
Site <- "Sanford Health System"
ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.5), color = "black", size = 3, position = position_dodge(width = 0.9)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") +
    #scale_fill_manual(values =rev(pal_ruca),name="RUCA Code") + 
    scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    #scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60,80,100), limits= c(0, 105),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5, name = "% of Response Ratio", 
                                             breaks=c(4.0,8.0,12.0,16.0,20.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )

#KP sites
data <- ruca_dt(plt.combo.kpga,Urbanicity)
Site <- "Kaiser Permenante Georgia"
ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=round(prop,digits=1), y=prop*0.5), color = "black", size = 3, position = position_dodge(width = 0.9)) + 
    geom_label(aes(y=Ratio*20,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") +
    #scale_fill_manual(values =rev(pal_ruca),name="RUCA Code") + 
    scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    #scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(20,40,60,80,100), limits= c(0, 105),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /20, name = "% of Response Ratio", 
                                             breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )


data <- ruca_dt(plt.combo.kphi,Urbanicity)
Site <- "Kaiser Permenante Hawaii"
ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.5), color = "black", size = 3, position = position_dodge(width = 0.9)) + 
    geom_label(aes(y=Ratio*15,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") +
    #scale_fill_manual(values =rev(pal_ruca),name="RUCA Code") + 
    scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    #scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(15,30,45,60), limits= c(0, 65),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /15, name = "% of Response Ratio", 
                                             breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )

#KPNW
data <- ruca_dt(plt.combo.kpnw,Urbanicity)
Site <- "Kaiser Permenante Northwest"
ggplot(data[!grepl("Unknown",data$RUCA),], mapping=aes(x = Month,fill=RUCA, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1),nsmall=1)), y=prop*0.5), color = "black", size = 3, position = position_dodge(width = 0.9)) + 
    geom_label(aes(y=Ratio*15,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    #scale_fill_brewer(palette ="Dark2",name="RUCA Code") +
    #scale_fill_manual(values =rev(pal_ruca),name="RUCA Code") + 
    scale_fill_carto_d(name = "Insurance: ", palette = "Earth",direction=-1)+
    #scale_fill_oi(name = "Insurance: ",palette = "full",reverse = FALSE,order=c(1,4,2,5,3))+
    scale_y_continuous( name="% of Total Verified", breaks=c(15,30,45,60,80), limits= c(0,90),
                        labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /15, name = "% of Response Ratio", 
                                             breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1))) + guides(fill = guide_legend( override.aes = aes(label = ""))) +
    labs( title=paste0("Urbanicity (RUCA code) at Verification (%) and Response Ratio among Connect Verified Participants\n", Site), x = "", caption="Code 1 is the most urban and Code 10 is the most rural.\nThe 'Unknown' Urbanicity group is removed") + 
    theme( axis.title.x = element_text( size = 14, face = "bold"),
           axis.title.y = element_text(size = 14, face = "bold"), 
           #axis.title.y.right = element_text(size=10,face="bold"), 
           title = element_text(size=9,face="bold"), 
           # Remove panel border 
           panel.border = element_blank(),
           # Remove panel grid lines 
           panel.grid.major = element_blank(), 
           panel.grid.minor = element_blank(), 
           # Remove panel background 
           panel.background = element_blank(), 
           # Add axis line
           axis.line = element_line(colour = "grey"), 
           # Remove the legend 
           legend.title = element_text(size=12,face="bold"), 
           legend.position ="bottom" )
```

#for the SES

```{r}

adi_pal <- c("#67A9CF","#66C2A4","#e5f5e0","#FED98E","#F4A582",)
adi_pal2 <- c("#2973A5","#3C989E", "#BBD5D7","#E7CCAD", "#CC7D15") #based on the CGOV_20456_color_pattelet Mia recommended

adi_dt <- function(dt.combo,SES){
   data <- dt.combo %>% filter(.,newcol=="SES") %>% 
     select(site, Month,newcol,new_group,Total,Activerecruit)%>% 
     dplyr::rename(ADI=new_group) %>% group_by(Month) %>% 
     mutate(T_verified= sum(Total), 
            T_invited = sum(Activerecruit),
            prop = 100*Total/sum(Total), 
            Ratio = round(100*Total/Activerecruit,digits =2),
            ADI = ifelse(grepl("Unknown", ADI), "Unknown/ Missing", ADI),
            ADI = factor(ADI,levels=c("First Quartile (ADI scores 1-25)", "Second Quartile (ADI scores 26-50)", "Third Quartile (ADI scores 51-75)", "Fourth Quartile (ADI scores 76-100)", "Unknown/ Missing", "Other ADI")),
         Month=factor(Month,levels=c("Feb-23","May-23","Aug-23","Nov-23","Feb-24")))
}

data<- adi_dt(plt.combo.UC,"SES")
Site <- "University of Chicago Medicine"


data<- adi_dt(plt.combo.HP,"SES")
Site <- "HealthPartners"
adi_pal <- c("#008080", "#609E91", "#A0BDA2",  "#F2D7A7", "#E8AD7C")

ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    scale_fill_carto_d(palette="Geyser",name="ADI")
    #scale_fill_manual(values=adi_pal,name="ADI")+
    #scale_fill_brewer(palette ="Accent",name="ADI") +
    #scale_fill_OkabeIto(name = "ADI: ") +
    #scale_fill_viridis_d(name="ADI",direction = -1,option="cividis") + 
    scale_y_continuous( name="% of Total Verified", limits=c(0,60), breaks=c(10,20,30,40,50,60),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(2.0,4.0,6.0,8,10,12),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )
    
    
data<- adi_dt(plt.combo.HFH,"SES")
Site <- "Hentry Ford Health System"

ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.6), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    scale_fill_carto_d(palette="Geyser",name="ADI")
    #scale_fill_manual(values=adi_pal,name="ADI")+
    #scale_fill_brewer(palette ="Accent",name="ADI") +
    #scale_fill_OkabeIto(name = "ADI: ") +
    #scale_fill_viridis_d(name="ADI",direction = -1,option="cividis") + 
    scale_y_continuous( name="% of Total Verified", limits=c(0,60), breaks=c(10,20,30,40,50,60),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(2.0,4.0,6.0,8,10,12),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )  

data<- adi_dt(plt.combo.HFH,"SES")
Site <- "Hentry Ford Health System" 

 ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.4), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    scale_fill_carto_d(palette="Geyser",name="ADI")+
#scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = -1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,75), breaks=c(10,20,30,40,50,60,70),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ . /5,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0,12.0,15.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )   
 
 
data<- adi_dt(plt.combo.SF,"SES")
Site <- "Sanford Health" 

ggplot(data[!grepl("Missing",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.7), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
    scale_fill_carto_d(palette="Geyser",name="ADI")+
#scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,100), breaks=c(10,20,30,40,50,60,70,80,100),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ . ,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0,12.0,15.0,18.0,100),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n Both 'Unknown' and 'Other' Groups in ADI are removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" ) 

data<- adi_dt(plt.combo.MF,"SES")
Site <- "Marshfield Clinic Health System" 

ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.4), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge(width = 0.8),size=2.5,show.legend = F) + 
#    scale_fill_carto_d(palette="Geyser",name="ADI",direction=1)+
scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,100), breaks=c(10,20,30,40,50,60,70,80,100),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ ./10 ,  name = "% of Response Ratio", breaks=c(2.0,4.0,6.0,8.0,10.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data<- adi_dt(plt.combo.UC,"SES")
Site <- "University of Chicago Medicine"

ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.2), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*4.5,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 0.8,preserve="total"),size=2.5,show.legend = F,label.padding = unit(0.15,"lines")) + 
#    scale_fill_carto_d(palette="Geyser",name="ADI",direction=1)+
scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,60), breaks=c(10,20,30,40,50,60),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ ./4.5 ,  name = "% of Response Ratio", breaks=c(3.0,6.0,9.0,12.0,15.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )

data<- adi_dt(plt.combo.kpga,"SES")
Site <- "Kaiser Permenante Georgia"
ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.2), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*10,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 0.8,preserve="total"),size=2.5,show.legend = F,label.padding = unit(0.15,"lines")) + 
#    scale_fill_carto_d(palette="Geyser",name="ADI",direction=1)+
scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,45), breaks=c(10,20,30,40,50),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ ./10 ,  name = "% of Response Ratio", breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


data<- adi_dt(plt.combo.kphi,"SES")
Site <- "Kaiser Permenante Hawaii"
ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.7), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*20,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 0.8,preserve="total"),size=2.5,show.legend = F,label.padding = unit(0.15,"lines")) + 
#    scale_fill_carto_d(palette="Geyser",name="ADI",direction=1)+
scale_fill_manual(values=adi_pal,name="ADI")+
#scale_fill_brewer(palette ="Accent",name="ADI") +
#scale_fill_OkabeIto(name = "ADI: ") +
#scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
scale_y_continuous( name="% of Total Verified", limits=c(0,90), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                    sec.axis = sec_axis( ~ ./20 ,  name = "% of Response Ratio", breaks=c(1.0,2.0,3.0,4.0,5.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )


data<- adi_dt(plt.combo.kpga,"SES")
Site <- "Kaiser Permenante Northwest"
ggplot(data[!grepl("Other",data$ADI),], mapping=aes(x = Month,fill=ADI, y = prop)) + 
    geom_bar(stat="identity",na.rm=TRUE,width=0.92, position = "dodge") + 
    geom_text(aes(label=paste(format(round(prop,digits=1))), y=prop*0.3), color = "black", size = 3, position = position_dodge(width = 1.0)) + 
    geom_label(aes(y=Ratio*15,label=paste(format(round(Ratio,digits=1),nsmall=1))),color="black",position = position_dodge2(width = 0.8,preserve="total"),size=2.5,show.legend = F,label.padding = unit(0.15,"lines")) + 
    #    scale_fill_carto_d(palette="Geyser",name="ADI",direction=1)+
    scale_fill_manual(values=adi_pal,name="ADI")+
    #scale_fill_brewer(palette ="Accent",name="ADI") +
    #scale_fill_OkabeIto(name = "ADI: ") +
    #scale_fill_viridis_d(name="ADI",direction = 1,option="cividis") + 
    scale_y_continuous( name="% of Total Verified", limits=c(0,100), breaks=c(20,40,60,80,100),labels = scales::number_format(accuracy = 0.1), 
                        sec.axis = sec_axis( ~ ./15 ,  name = "% of Response Ratio", breaks=c(1.0,2.0,3.0,4.0,5.0,6.0),labels = scales::number_format(accuracy = 0.1)))  + 
    guides(fill = guide_legend( override.aes = aes(label = ""), nrow=2)) +
    labs( title=paste0("Total % of Verified Participants and Response Ratio by ADI \n",Site), x = "",caption ="First Quartile represents least deprived and 4th Quartile represents most deprived.\n 'Other' Group in ADI is removed.") +
    theme( #axis.title.x = element_text( size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        #axis.title.y.right = element_text(size=10,face="bold"),
        title = element_text(size=9,face="bold"),
        # Remove panel border
        panel.border = element_blank(),  
        # Remove panel grid lines
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        # Remove panel background
        panel.background = element_blank(),
        # Add axis line
        axis.line = element_line(colour = "grey"),
        # Remove the legend
        legend.title = element_text(size=12,face="bold"),
        legend.position ="bottom" )
```
